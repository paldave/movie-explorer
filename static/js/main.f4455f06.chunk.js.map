{"version":3,"sources":["images/astronaut.svg","constants/index.js","reducers/userInterface.js","reducers/apiConfig.js","reducers/movies/popular.js","reducers/movies/nowPlaying.js","reducers/movies/upcoming.js","reducers/movies/details.js","reducers/movies/discover.js","reducers/tv/popular.js","reducers/tv/details.js","reducers/tv/discover.js","reducers/personDetails.js","reducers/search.js","reducers/index.js","middleware/api.js","store.js","middleware/actionArray.js","helpers/image.js","actions/apiConfig.js","components/layout/SplashScreen.js","components/layout/Sidebar.js","components/layout/SearchBar.js","components/layout/Navbar.js","helpers/scroll.js","actions/movies/popular.js","actions/movies/upcoming.js","actions/tv/popular.js","components/Backdrop.js","components/SectionHeader.js","components/layout/ImageUnavailable.js","helpers/movie.js","components/cards/ItemThumb.js","components/cards/ItemCast.js","components/layout/SimpleLoader.js","helpers/itemType.js","components/cards/ItemList.js","containers/Home.js","helpers/parseVideos.js","helpers/parseCrew.js","actions/movies/details.js","containers/details/BaseHoc.js","components/DetailsImage.js","components/details/ReviewItem.js","components/details/ReviewList.js","components/layout/Button.js","components/modals/Player.js","components/details/ActionBar.js","components/details/Director.js","containers/details/Movies.js","components/CastTable.js","containers/details/full-cast/CastBase.js","containers/details/full-cast/MoviesCast.js","helpers/date.js","helpers/query.js","actions/movies/discover.js","components/Paginate.js","components/filters/FilterCard.js","components/filters/FilterList.js","containers/grids/GridBase.js","containers/grids/movies/Popular.js","containers/grids/movies/Upcoming.js","containers/grids/movies/TopRated.js","actions/tv/details.js","containers/details/Tv.js","containers/details/full-cast/TvCast.js","actions/tv/discover.js","containers/grids/tv/Popular.js","containers/grids/tv/TopRated.js","actions/personDetails.js","helpers/object.js","components/CreditsTable.js","containers/Person.js","actions/search.js","containers/Search.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","API_REQUEST","initialState","pendingRequests","lastSelectedFilters","userInterface","state","action","type","isInitializing","imageConfig","availableSizes","baseUrl","genres","apiConfig","payload","isLoaded","moviesPopular","results","moviesNowPlaying","moviesUpcoming","moviesDetails","query","tvPopular","tvDetails","personDetails","movie","undefined","person","tv","userQuery","search","combineReducers","moviesDiscover","moviesDiscoverTop","moviesDiscoverUpcoming","tvDiscover","tvDiscoverTop","axiosClient","axios","create","baseURL","process","params","api_key","language","middleware","thunk","dispatch","next","url","onSuccess","method","data","dataProperty","includes","request","then","catch","error","console","log","Array","isArray","forEach","store","createStore","rootReducer","compose","applyMiddleware","PROPORTION","getUrl","size","base","path","parseImagesObject","images","poster_sizes","backdrop_sizes","secure_base_url","parseGenresForms","parsedObject","id","name","toLowerCase","value","label","saveApiConfig","Object","fromEntries","map","item","genresForms","fetchGenresConfig","genresConfig","SplashScreen","className","Component","Sidebar","searchIcon","showSearchBar","setShowSearchBar","useState","showSidebar","setSidebar","sidebarItems","onClick","to","prevState","showNav","onHideNav","title","items","titleStyle","backgroundColor","itemStyle","itemHoverStyle","SearchBar","searchAlwaysVisible","history","useHistory","searchValue","setSearchValue","searchInputRef","useRef","useEffect","current","focus","length","location","handleSubmit","event","preventDefault","blur","push","pathname","onSubmit","placeholder","onChange","target","ref","Navbar","src","logo","alt","href","trigger","position","on","closeOnDocumentClick","arrow","ScrollToTop","prevProps","this","props","window","scrollTo","React","withRouter","saveMoviesPopular","saveMoviesUpcoming","saveTvPopular","Backdrop","SIZE","backdropPath","imageUrl","imageStyle","backgroundPosition","backgroundImage","style","SectionHeader","linkName","linkTo","ImageUnavailable","getYear","date","Date","getFullYear","getCurrency","Intl","NumberFormat","currency","format","ItemThumb","showMeta","itemType","poster_path","vote_average","release_date","first_air_date","renderImage","defaultProps","ItemCast","proportionType","PROFILE_THUMBNAIL","profile_path","character","SimpleLoader","ITEM_TYPE","ItemList","media_type","episode_count","viewMore","itemsPerRow","viewMoreLink","slice","key","renderThumbnail","renderViewMore","Home","fetchMoviesPopular","fetchMoviesUpcoming","fetchTvPopular","backdrop_path","actionCreators","connect","parseVideos","videos","parsedVideos","video","site","unshift","parseCrew","crew","parsedData","member","department","hasOwnProperty","saveMoviesDetails","credits","fetchMoviesDetails","append_to_response","WrappedContainer","fetchData","BaseHoc","match","Number","isLoading","DetailsImage","imagePath","ReviewItem","author","lines","more","renderExtend","less","expanded","content","Button","disabled","Player","showPlayer","isOpen","onRequestClose","ariaHideApp","overlayClassName","playing","controls","volume","ActionBar","playerActive","setState","renderTrailer","Director","MoviesDetails","genre","runtime","budget","revenue","members","linkToCast","find","job","tagline","overview","renderSidebar","cast","keys","reviews","recommendations","CastTable","includePhotos","goToPersonDetails","renderCastRow","renderCrewRow","CastBase","goBackToDetails","goBack","renderContent","buttonLabel","MoviesCast","getDatePlusMonthFormatted","month","moment","add","SORT_BY","popularityDesc","popularityAsc","ratingDesc","ratingAsc","titleDesc","titleAsc","releaseDateDesc","releaseDateAsc","RELEASE_DATE","greaterThan","lessThan","defaultQueryValues","include_adult","include_video","upcomingQueryValues","days","topRatedQueryValues","parseQuery","parsedQueryList","entries","element","join","saveMoviesDiscover","saveMoviesDiscoverTop","saveMoviesDiscoverUpcoming","clearStoreState","_fetchMoviesBase","unparsedQuery","currentPage","baseQuery","saveCallback","page","parsedQuery","Paginate","totalPages","queryPage","handlePageClick","previousLabel","nextLabel","breakLabel","breakClassName","pageClassName","previousClassName","nextClassName","pageCount","forcePage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","FilterCard","filters","onQueryChange","closed","openFilter","_FilterGenres","availableGenres","defaultValue","options","values","isEmpty","_checkValues","classNamePrefix","isMulti","isSearchable","filter","_checkDate","stateObject","selected","dateFormat","placeholderText","showMonthYearPicker","_FilterDates","FilterList","searchDisabled","setSearch","sort_by","with_genres","defaultQuery","fetchDataAction","wrappedQuery","mainTitle","GridBase","pageChanged","newQuery","selectedPage","renderFilterPanel","total_results","renderPaginate","total_pages","mapStateToProps","Popular","Upcoming","TopRated","saveTvDetails","fetchTvDetails","TvDetails","number_of_seasons","number_of_episodes","episode_run_time","created_by","TvCast","saveTvDiscover","saveTvDiscoverTop","_fetchTvBase","_sortByKey","additionalFunction","sort","a","b","_parseItemCredits","dateKey","parsedHash","dataType","year","yearIsEmpty","arrayLastElement","arrayToPush","lastItem","extras","savePersonDetails","movie_credits","tv_credits","most_known_for","array","duplicatedHash","Set","duplicate","has","_removeDuplicates","combined_credits","parseFloat","hasData","object","CreditsTable","creditsToShow","changeCredits","goToDetails","redirectPath","movieCredits","tvCredits","showYear","dataName","departmentName","reverse","renderTableRow","extra","index","renderSelectionButtons","renderTable","Person","biographyExtended","extendBiography","biographyDiv","createRef","biographyExtendButton","fetchPersonDetails","clientWidth","clientHeight","scrollWidth","scrollHeight","isOverflown","classList","external_ids","facebook_id","instagram_id","twitter_id","_getValue","biography","extendButton","renderSocialLinks","renderAdditionalInfo","renderBiography","saveSearchPerson","saveSearchMovies","saveSearchTv","Search","dataToShow","handleDataChange","fetchSearchPerson","fetchSearchMovies","fetchSearchTv","currentDataName","searchQuery","setSearchQueryUser","currentData","App","fetchApiConfig","basename","exact","component","MoviesUpcoming","MoviesTopRated","MoviesPopular","TvTopRated","TvPopular","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,uC,yrBCA9BC,EAAc,cCOrBC,EAAe,CACnBC,gBAAiB,EACjBC,oBAAqB,IA0BRC,EAvBO,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACtD,OAAOA,EAAOC,MACZ,KAAKP,EACH,OAAO,eACFK,EADL,CAEEH,gBAAiBG,EAAMH,gBAAkB,IAE7C,IDlBsB,aCuBtB,IDtBqB,YCuBnB,OAAO,eACFG,EADL,CAEEH,gBAAiBG,EAAMH,gBAAkB,IAG7C,QACE,OAAOG,IC7BPJ,EAAe,CACnBO,gBAAgB,EAChBC,YAAa,CACXC,eAAgB,GAChBC,QAAS,MAEXC,OAAQ,IAgBKC,EAbG,WAAmC,IAAlCR,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAOA,EAAOC,MACZ,IFT0B,iBEUxB,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEN,gBAAgB,IAEpB,QACE,OAAOH,IClBPJ,EAAe,CACnBc,UAAU,GAgBGC,EAbO,WAAmC,IAAlCX,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACtD,OAAOA,EAAOC,MACZ,IHF8B,qBGG5B,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEC,UAAU,IAEd,QACE,OAAOV,ICbPJ,EAAe,CACnBgB,QAAS,IAeIC,EAZU,WAAmC,IAAlCb,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACzD,OAAOA,EAAOC,MACZ,IJDkC,yBIEhC,OAAO,eACFF,EADL,GAEKC,EAAOQ,SAEd,QACE,OAAOT,ICZPJ,EAAe,CACnBc,UAAU,GAgBGI,EAbQ,WAAmC,IAAlCd,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACvD,OAAOA,EAAOC,MACZ,ILA+B,sBKC7B,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEC,UAAU,IAEd,QACE,OAAOV,ICXPJ,EAAe,CACnBc,UAAU,GAgBGK,EAbO,WAAmC,IAAlCf,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACtD,OAAOA,EAAOC,MACZ,IND8B,qBME5B,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEC,UAAU,IAEd,QACE,OAAOV,ICVPJ,EAAe,CACnBc,UAAU,EACVM,MAAO,MCPHpB,EAAe,CACnBc,UAAU,GAgBGO,EAbG,WAAmC,IAAlCjB,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAOA,EAAOC,MACZ,IRM0B,iBQLxB,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEC,UAAU,IAEd,QACE,OAAOV,ICXPJ,EAAe,CACnBc,UAAU,GAgBGQ,EAbG,WAAmC,IAAlClB,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAOA,EAAOC,MACZ,ITK0B,iBSJxB,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEC,UAAU,IAEd,QACE,OAAOV,ICXPJ,EAAe,CACnBc,UAAU,EACVM,MAAO,MCJHpB,EAAe,CACnBc,UAAU,GAgBGS,EAbO,WAAmC,IAAlCnB,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACtD,OAAOA,EAAOC,MACZ,IXS8B,qBWR5B,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEC,UAAU,IAEd,QACE,OAAOV,ICTPJ,EAAe,CACnBc,UAAU,EACVU,WAAOC,EACPC,YAAQD,EACRE,QAAIF,EACJG,eAAWH,GAmCEI,EAhCA,WAAmC,IAAlCzB,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC/C,OAAOA,EAAOC,MACZ,IZG6B,oBYF3B,OAAO,eACFF,EADL,CAEEsB,OAAQrB,EAAOQ,QACfC,UAAU,IAEd,IZF6B,oBYG3B,OAAO,eACFV,EADL,CAEEoB,MAAOnB,EAAOQ,QACdC,UAAU,IAEd,IZPyB,gBYQvB,OAAO,eACFV,EADL,CAEEuB,GAAItB,EAAOQ,QACXC,UAAU,IAEd,IZZ4B,mBYa1B,OAAO,eACFV,EADL,CAEEwB,UAAWvB,EAAOQ,UAEtB,IZf6B,oBYgB3B,OAAOb,EACT,QACE,OAAOI,ICvBE0B,cAAgB,CAC7B3B,gBACAS,YACAG,gBACAE,mBACAC,iBACAC,gBACAY,eNhB4B,WAAmC,IAAlC3B,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC9D,OAAOA,EAAOC,MACZ,IPJ+B,sBOK7B,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEO,MAAOf,EAAOe,MACdN,UAAU,IAEd,IPK6B,oBOJ3B,OAAOd,EACT,QACE,OAAOI,IMKX4B,kBND+B,WAAmC,IAAlC5B,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACjE,OAAOA,EAAOC,MACZ,IPnBmC,0BOoBjC,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEO,MAAOf,EAAOe,MACdN,UAAU,IAEd,IPX6B,oBOY3B,OAAOd,EACT,QACE,OAAOI,IMVX6B,uBNcoC,WAAmC,IAAlC7B,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACtE,OAAOA,EAAOC,MACZ,IPlCwC,+BOmCtC,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEO,MAAOf,EAAOe,MACdN,UAAU,IAEd,IP3B6B,oBO4B3B,OAAOd,EACT,QACE,OAAOI,IMzBXiB,YACAC,YACAY,WHtBwB,WAAmC,IAAlC9B,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IVG2B,kBUFzB,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEO,MAAOf,EAAOe,MACdN,UAAU,IAEd,IVM6B,oBUL3B,OAAOd,EACT,QACE,OAAOI,IGWX+B,cHP2B,WAAmC,IAAlC/B,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC7D,OAAQA,EAAOC,MACb,IVZ+B,sBUa7B,OAAO,eACFF,EADL,GAEKC,EAAOQ,QAFZ,CAGEO,MAAOf,EAAOe,MACdN,UAAU,IAEd,IVV6B,oBUW3B,OAAOd,EACT,QACE,OAAOI,IGJXmB,gBACAM,W,iBCjCIO,E,OAAcC,EAAMC,OACxB,CACEC,QAASC,+BACTC,OAAQ,CACNC,QAASF,mCACTG,SAAU,WCAVC,EAAa,CAACC,IDQS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,SAAAC,GAAI,OAAI,SAAA1C,GAGrD,GAFA0C,EAAK1C,GAEDA,EAAOC,OAASP,EAApB,CAH+D,MAOTM,EAAOQ,QAArDmC,EAPuD,EAOvDA,IAAKC,EAPkD,EAOlDA,UAPkD,IAOvCC,cAPuC,MAO9B,MAP8B,MAOvBC,YAPuB,MAOhB,GAPgB,EAQzDC,EAAe,CAAC,MAAO,UAAUC,SAASH,GAAU,SAAW,OAErEd,EAAYkB,QAAZ,aAAsBN,MAAKE,UAASE,EAAeD,IAChDI,MAAK,YAAe,IAAZJ,EAAW,EAAXA,KACPL,EAASG,EAAUE,IACnBL,EAhBmB,CAAExC,KdZD,kBc8BrBkD,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZX,EAnBkB,CAAExC,KdZD,qBgBFY,SAAC,GAAD,IAAGwC,EAAH,EAAGA,SAAH,OAAkB,SAAAC,GAAI,OAAI,SAAA1C,GACzDuD,MAAMC,QAAQxD,GAChBA,EAAOyD,QAAQhB,GAIjBC,EAAK1C,ODYQ0D,EARDC,YACZC,EALmB,GAOnBC,YACEC,IAAe,WAAf,EAAmBvB,K,qDEbVwB,EACA,YADAA,EAED,WAFCA,EAGH,SAHGA,EAIQ,oBAGRC,EAAS,SAACC,EAAMC,EAAMC,GACjC,MAAM,GAAN,OAAUD,GAAV,OAAiBD,GAAjB,OAAwBE,ICNpBC,EAAoB,SAAC5D,GAAa,IAAD,EAC/B6D,EAAW7D,EAAX6D,OAeN,MAAO,CAAElE,YAAa,CAAEC,gBATJ,mBACjB2D,EAA+BM,EAAOC,aAAa,IADlC,cAEjBP,EAAuBM,EAAOC,aAAa,IAF1B,cAGjBP,EAAoBM,EAAOC,aAAa,IAHvB,cAIjBP,EAAsBM,EAAOE,eAAe,IAJ3B,GASoBlE,QAFxBgE,EAAOG,mBAWnBC,EAAmB,SAACjE,GACxB,IAAIkE,EAAe,GAUnB,OARAlE,EAAQiD,SAAQ,gBAAGkB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACdF,EAAaE,EAAKC,eAAiB,CACjC5E,KAAM,cACN6E,MAAOH,EACPI,MAAOH,MAIJF,GAGHM,EAAgB,SAACzE,EAAWD,GAChC,MAAO,CACLL,KlBxC0B,iBkByC1BO,QAAQ,eACH4D,EAAkB7D,GADhB,CAELD,QAzBeE,EAyBKF,EAxBxB2E,OAAOC,YACL1E,EAAQ2E,KAAI,SAACC,GAAD,MAAU,CAACA,EAAKT,GAAIS,EAAKR,WAwBnCS,YAAaZ,EAAiBnE,MA1BhB,IAACE,GA6Cf8E,GAAoB,SAAC/E,GAAD,MAAgB,CACxCN,KAAMP,EACNc,QAAS,CACPmC,IAAK,oBACLC,UAAW,SAAC2C,GAAD,MAAkB,CAC3BP,EAAczE,EAAWgF,EAAajF,aCrEvBkF,I,8KAEjB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACf,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,WACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACf,yBAAKA,UAAU,oBAKvB,8C,GAhBkCC,c,0DC2E3BC,I,OAvEC,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAAuB,EACjCC,qBADiC,oBAC5DC,EAD4D,KAC/CC,EAD+C,KAG7DC,EAAe,CACnB,yBAAKT,UAAU,qBAAqBU,QAAS,kBAAMF,GAAW,KAC5D,wBAAIR,UAAU,iBACZ,kBAAC,IAAD,CAAMW,GAAG,KAAT,UAGJ,yBAAKX,UAAU,gBAAgBU,QAAS,kBAAMF,GAAW,KACvD,wBAAIR,UAAU,iBACZ,kBAAC,IAAD,CAAMW,GAAG,WAAT,WAEF,wBAAIX,UAAU,iBACZ,kBAAC,IAAD,CAAMW,GAAG,UAAUX,UAAU,iBAC3B,wCAEF,kBAAC,IAAD,CAAMW,GAAG,mBAAmBX,UAAU,iBACpC,yCAEF,kBAAC,IAAD,CAAMW,GAAG,oBAAoBX,UAAU,iBACrC,4CAIN,yBAAKA,UAAU,gBAAgBU,QAAS,kBAAMF,GAAW,KACvD,wBAAIR,UAAU,iBACZ,kBAAC,IAAD,CAAMW,GAAG,OAAT,WAEF,wBAAIX,UAAU,iBACZ,kBAAC,IAAD,CAAMW,GAAG,MAAMX,UAAU,iBACvB,wCAEF,kBAAC,IAAD,CAAMW,GAAG,gBAAgBX,UAAU,iBACjC,6CAMR,OACE,yBAAKA,UAAU,WACb,yBACEU,QAAS,kBAAOL,GAAiB,SAACO,GAAD,OAAeP,GAAkBO,QAEjER,EACC,wBAAIJ,UAAU,eACZ,kBAAC,KAAD,OAGF,oCACGG,MAIP,yBAAKH,UAAU,kBACb,kBAAC,KAAD,CAAiBU,QAAS,kBAAMF,GAAW,OAE7C,kBAAC,KAAD,CACEK,QAASN,EACTO,UAAW,kBAAMN,GAAW,IAC5BO,OAAO,EACPC,MAAOP,EACPQ,WAAY,CAAEC,gBAAiB,WAC/BC,UAAW,CAAED,gBAAiB,QAC9BE,eAAgB,CAAEF,gBAAiB,gBCa5BG,I,OA/EG,SAAC,GAA8D,IAA5DjB,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,iBAAkBiB,EAA0B,EAA1BA,oBAC9CC,EAAUC,cAD8D,EAExClB,mBAAS,IAF+B,oBAEvEmB,EAFuE,KAE1DC,EAF0D,KAGxEC,EAAiBC,iBAAO,MAE9BC,qBAAU,WACHP,GACHK,EAAeG,QAAQC,SAGpB3B,GAAiBqB,EAAYO,OAAS,GACzCN,EAAe,MAEhB,CAACJ,EAAqBlB,EAAeqB,EAAYO,SAEpDH,qBAAU,WACJN,EAAQU,SAAS3H,OACnBoH,EAAeH,EAAQU,SAAS3H,MAAMgB,SAEvC,CAACiG,EAAQU,SAAS3H,QAErB,IAIM4H,EAAe,SAACC,GACpBA,EAAMC,iBAEc,KAAhBX,IAIJE,EAAeG,QAAQO,OAEvBd,EAAQe,KAAK,CACXC,SAAU,UACVjI,MAAO,CAAEgB,MAAOmG,OAIpB,OACE,6BACEzB,UAAS,qBAAiBI,EAAyB,GAAT,SAE1C,yBAAKJ,UAAU,sBACb,0BAAMwC,SAAUN,GACd,2BACE1H,KAAK,OACLiI,YAAY,+CACZpD,MAAOoC,EACPiB,SA7BgB,SAACP,GACzBT,EAAeS,EAAMQ,OAAOtD,QA6BpBuD,IAAKjB,IAEP,4BACE3B,UAAS,oBACTU,QAASwB,GAET,0BAAMlC,UAAU,SAAhB,YAEAsB,GACA,0BACEtB,UAAU,eACVU,QAAS,kBAAOL,GAAiB,SAACO,GAAD,OAAeP,GAAkBO,QAElE,kBAAC,KAAD,Y,qBCkCCiC,I,OA9FA,WACb,IACMvB,EAAoD,YAD1CE,cACoBS,SAASM,SAF1B,EAGuBjC,mBAASgB,GAHhC,oBAGZlB,EAHY,KAGGC,EAHH,KAKnBwB,qBAAU,WACRxB,EAAiBiB,KAChB,CAACA,IAEJ,IAAMnB,EAAa,WACjB,OACE,wBACEH,UAAS,sBAAiBI,EAAgB,WAAa,IACvDM,QAAS,kBAAOL,GAAiB,SAACO,GAAD,OAAeP,GAAkBO,QAElE,kBAAC,KAAD,QAKN,OACE,4BAAQZ,UAAU,kBAChB,yBAAKA,UAAU,SAASd,GAAG,YACzB,yBAAKc,UAAU,eACb,kBAAC,IAAD,CAAMW,GAAG,IAAIX,UAAU,4BACrB,yBAAKA,UAAU,cAAc8C,IAAKC,KAAMC,IAAI,cAC5C,yBAAKhD,UAAU,eAAf,UAGJ,kBAAC,GAAD,CACEG,WAAYA,EACZC,cAAeA,EACfC,iBAAkBA,IAEpB,yBAAKL,UAAU,eACb,uBAAGiD,KAAK,6CACN,2CACA,8BAAM,kBAAC,KAAD,SAGV,yBAAKjD,UAAU,gBACb,4BACE,kBAAC,KAAD,CACEkD,QAAS,wBAAIlD,UAAU,eAAd,UACTmD,SAAS,gBACTC,GAAG,QACHC,sBAAoB,EACpBC,OAAO,GAEP,yBAAKtD,UAAU,cACb,kBAAC,IAAD,CAAMW,GAAG,UAAUX,UAAU,QAC3B,0CAEF,kBAAC,IAAD,CAAMW,GAAG,mBAAmBX,UAAU,QACpC,2CAEF,kBAAC,IAAD,CAAMW,GAAG,oBAAoBX,UAAU,QACrC,8CAIN,kBAAC,KAAD,CACEkD,QAAS,wBAAIlD,UAAU,eAAd,UACTmD,SAAS,gBACTC,GAAG,QACHC,sBAAoB,EACpBC,OAAO,GAEP,yBAAKtD,UAAU,cACb,kBAAC,IAAD,CAAMW,GAAG,MAAMX,UAAU,QACvB,0CAEF,kBAAC,IAAD,CAAMW,GAAG,gBAAgBX,UAAU,QACjC,+CAIJsB,GACA,oCACGnB,QAMX,kBAAC,GAAD,CACEC,cAAeA,EACfC,iBAAkBA,EAClBiB,oBAAqBA,OC/FvBiC,G,iLACeC,GACbC,KAAKC,MAAMzB,SAASM,WAAaiB,EAAUvB,SAASM,UACtDoB,OAAOC,SAAS,EAAG,K,+BAKrB,OAAO,S,GAReC,IAAM5D,WAYjB6D,eAAWP,ICbpBQ,GAAoB,SAAChJ,GAAD,MAAc,CACtCP,KxBGgC,qBwBFhCO,YCFIiJ,GAAqB,SAACjJ,GAAD,MAAc,CACvCP,KzBKiC,sByBJjCO,YCFIkJ,GAAgB,SAAClJ,GAAD,MAAc,CAClCP,K1BW4B,iB0BV5BO,YCCmBmJ,I,yDAMnB,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,KAAO7F,EAHK,E,qDAMT,IAAD,EAC+BmF,KAAKC,MAAnCU,EADD,EACCA,aAAc1J,EADf,EACeA,YAChB8D,EAAO9D,EAAYC,eAAe8I,KAAKU,MACvCE,EAAW9F,EAAOC,EAAM9D,EAAYE,QAASwJ,GAE7CE,EAAa,CACjBC,mBAAoB,aACpBC,gBAAgB,OAAD,OAASH,EAAT,MAGjB,OACE,yBAAKrE,UAAS,6BAAyBoE,EAAiC,GAAlB,kBACpD,yBAAKpE,UAAU,oBACb,yBAAKyE,MAAOH,EAAYtE,UAAU,mBAClC,yBAAKA,UAAU,wB,GA1BaC,cCmBvByE,I,OAnBO,SAAC,GAAiC,IAA/B3D,EAA8B,EAA9BA,MAAO4D,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACxC,OACE,yBAAK5E,UAAU,kBACb,0BAAMA,UAAU,SAASe,GACvB6D,GACA,kBAAC,IAAD,CAAMjE,GAAIiE,GACR,0BAAM5E,UAAU,aAAa2E,O,SCCxBE,I,OARU,WACvB,OACE,yBAAK7E,UAAU,YACb,kBAAC,KAAD,SCPO8E,GAAU,SAACC,GAAD,OAAU,IAAIC,KAAKD,GAAME,eASnCC,GAAc,SAAC7F,GAC1B,OAAc,IAAVA,EACK,IAGF,IAAI8F,KAAKC,aAAa,QAC3B,CAAEX,MAAO,WAAYY,SAAU,QAC/BC,OAAOjG,ICPUkG,I,wDAWnB,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,KAAO7F,EAHK,E,wDAMP5D,EAAagE,GACvB,IAAKA,EACH,OAAO,kBAAC,GAAD,MAGT,IAAMF,EAAO9D,EAAYC,eAAe8I,KAAKU,MACvCjH,EAAMqB,EAAOC,EAAM9D,EAAYE,QAAS8D,GAE9C,OACE,yBAAKoE,IAAK5F,EAAK8F,IAAI,O,+BAIb,IAAD,EAC8BS,KAAKC,MAAlCrG,EADD,EACCA,KAAMmI,EADP,EACOA,SAAUC,EADjB,EACiBA,SAChB/K,EAAgB+I,KAAKC,MAAM5I,UAA3BJ,YAER,OACE,yBAAKsF,UAAU,6BACb,kBAAC,IAAD,CAAMW,GAAE,WAAM8E,EAAN,oBAA0BpI,EAAK6B,KACrC,yBAAKc,UAAU,YACZwF,GACC,yBAAKxF,UAAS,oBAAgB3C,EAAKqI,YAA6B,GAAf,eAC/C,yBAAK1F,UAAU,oBACb,0BAAMA,UAAU,eAAe3C,EAAKsI,cACpC,8BAAM,kBAAC,KAAD,QAER,yBAAK3F,UAAU,qBACb,8BAAO3C,EAAK0D,OAAS1D,EAAK8B,MAC1B,6BACA,8BAAO2F,GAAQzH,EAAKuI,cAAgBvI,EAAKwI,iBAAmB,OAIjEpC,KAAKqC,YAAYpL,EAAa2C,EAAKqI,oB,GAnDTzF,cAAlBsF,GAOZQ,aAAe,CACpBP,UAAU,G,WCTOQ,G,0KAUPtL,EAAagE,GACvB,IAAKA,EACH,OAAO,kBAAC,GAAD,MAGT,IAAMuH,EACJxC,KAAKC,MAAMwC,kBACX5H,EACAA,EAEIE,EAAO9D,EAAYC,eAAesL,GAClC/I,EAAMqB,EAAOC,EAAM9D,EAAYE,QAAS8D,GAE9C,OACE,yBAAKoE,IAAK5F,EAAK8F,IAAI,O,+BAIb,IAAD,EAC6BS,KAAKC,MAAjCrG,EADD,EACCA,KAAM6I,EADP,EACOA,kBACNxL,EAAgB+I,KAAKC,MAAM5I,UAA3BJ,YAER,OACE,yBAAKsF,UAAS,mDAA8CkG,EAAoB,cAAgB,KAC9F,kBAAC,IAAD,CAAMvF,GAAE,0BAAqBtD,EAAK6B,KAChC,yBAAKc,UAAU,YACb,yBAAKA,UAAU,cACdyD,KAAKqC,YAAYpL,EAAa2C,EAAK8I,eAClCD,GACA,yBAAKlG,UAAU,uBACb,0BAAMA,UAAU,SAAS3C,EAAK8B,MADhC,IAC6C,6BAC3C,0BAAMa,UAAU,kCAAkC3C,EAAK+I,mB,GAzCjCnG,aAAjB+F,GAMZD,aAAe,CACpBG,mBAAmB,G,WCNRG,GANM,WACnB,OACE,yBAAKrG,UAAU,kBCLNsG,GACH,SADGA,GAEP,KAFOA,GAGL,OCOaC,I,qLAaH5G,EAAM7E,GAAY,IAG5B2K,EAFIe,EAA4D7G,EAA5D6G,WAAYC,EAAgD9G,EAAhD8G,cAAeZ,EAAiClG,EAAjCkG,eAAgBD,EAAiBjG,EAAjBiG,aAWnD,OAPEH,EADEe,IAAeF,IAAgBG,GAAiBZ,EACvCS,GACFE,IAAeF,IAAoBV,EACjCU,GAEAA,MAGIA,GAEb,kBAAC,GAAD,CACEjJ,KAAMsC,EACN7E,UAAWA,IAMf,kBAAC,GAAD,CACEuC,KAAMsC,EACN7E,UAAWA,EACX2K,SAAUA,M,uCAMd,OACGhC,KAAKC,MAAMrG,OACXoG,KAAKC,MAAMgD,UACZjD,KAAKC,MAAMrG,KAAK2E,OAASyB,KAAKC,MAAMiD,YAE7B,KAIP,0BAAM3G,UAAU,aACd,kBAAC,IAAD,CAAMW,GAAI8C,KAAKC,MAAMkD,cACnB,kBAAC,KAAD,MACA,6BAFF,gB,+BASI,IAAD,SACkCnD,KAAKC,MAAtCrG,EADD,EACCA,KAAMvC,EADP,EACOA,UAAW6L,EADlB,EACkBA,YAEzB,OAAKtJ,EAIe,IAAhBA,EAAK2E,OAEL,uBAAGhC,UAAU,gBAAb,iCAKF,yBAAKA,UAAU,aACb,wBAAIA,UAAU,qBACX3C,EAAKwJ,MAAM,EAAGF,GAAajH,KAAI,SAACC,GAAD,OAC9B,wBAAIK,UAAU,yBAAyB8G,IAAKnH,EAAKT,IAC9C,EAAK6H,gBAAgBpH,EAAM7E,OAG/B2I,KAAKuD,mBAjBF,kBAAC,GAAD,U,GAnEwB/G,cAAjBsG,GAQZR,aAAe,CACpBW,UAAU,EACVC,YAAa,I,WCTXM,G,kLAMGxD,KAAKC,MAAMzI,cAAcD,UAC5ByI,KAAKC,MAAMwD,qBAGRzD,KAAKC,MAAMtI,eAAeJ,UAC7ByI,KAAKC,MAAMyD,sBAGR1D,KAAKC,MAAMnI,UAAUP,UACxByI,KAAKC,MAAM0D,mB,+BAIL,IAAD,EACyD3D,KAAKC,MAA7D5I,EADD,EACCA,UAAWG,EADZ,EACYA,cAAeG,EAD3B,EAC2BA,eAAgBG,EAD3C,EAC2CA,UAIlD,OACGN,EAAcC,SACdE,EAAeF,SACfK,EAAUL,QAMX,yBAAK8E,UAAU,kBACb,kBAAC,GAAD,CACEoE,aAAcnJ,EAAcC,QAAQ,GAAGmM,cACvC3M,YAAaI,EAAUJ,cAEzB,yBAAKsF,UAAU,kBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,yEAA8C,6BAA9C,uCAEF,6BAASd,GAAG,kBACV,kBAAC,GAAD,CACE6B,MAAM,iBACN4D,SAAS,YACTC,OAAO,YAET,kBAAC,GAAD,CACEvH,KAAMpC,EAAcC,QACpBJ,UAAWA,EACX8L,aAAa,aAGjB,6BAAS1H,GAAG,eACV,kBAAC,GAAD,CACE6B,MAAM,iBACN4D,SAAS,YACTC,OAAO,QAET,kBAAC,GAAD,CACEvH,KAAM9B,EAAUL,QAChBJ,UAAWA,EACX8L,aAAa,SAGjB,6BAAS1H,GAAG,mBACV,kBAAC,GAAD,CACE6B,MAAM,kBACN4D,SAAS,YACTC,OAAO,qBAET,kBAAC,GAAD,CACEvH,KAAMjC,EAAeF,QACrBJ,UAAWA,EACX8L,aAAa,yBA/ChB,kC,GA7BM3G,aA6FbqH,GAAiB,CACrBJ,mBZlGgC,iBAAO,CACvC1M,KAAMP,EACNc,QAAS,CACPmC,IAAK,iBACLC,UAAW4G,MY+FboD,oBXnGiC,iBAAO,CACxC3M,KAAMP,EACNc,QAAS,CACPmC,IAAK,kBACLC,UAAW6G,MWgGboD,eVpG4B,iBAAO,CACnC5M,KAAMP,EACNc,QAAS,CACPmC,IAAK,cACLC,UAAW8G,OUmGAsD,gBAbS,SAACjN,GAAD,MAAY,CAClCQ,UAAWR,EAAMQ,UACjBG,cAAeX,EAAMW,cACrBG,eAAgBd,EAAMc,eACtBG,UAAWjB,EAAMiB,aASqB+L,GAAzBC,CAAyCN,IC9G3CO,GAAc,SAACC,GAC1B,IAAIC,EAAe,GAkBnB,OAhBAD,EAAOzJ,SAAQ,SAAC2J,GACK,YAAfA,EAAMC,OAIVD,EAAMzK,IAAN,0CAA+CyK,EAAMb,KAElC,YAAfa,EAAMnN,MACRkN,EAAaG,QAAQF,GAGJ,WAAfA,EAAMnN,MACRkN,EAAapF,KAAKqF,OAIfD,GCnBII,GAAY,SAACC,GACxB,IAAIC,EAAa,GAYjB,OAVAD,EAAK/J,SAAQ,SAACiK,GAAY,IAChBC,EAAeD,EAAfC,WAEHF,EAAWG,eAAeD,KAC7BF,EAAWE,GAAc,IAG3BF,EAAWE,GAAY5F,KAAK2F,MAGvBD,GCNHI,GAAoB,SAACrN,GAIzB,OAHAA,EAAQ0M,OAASD,GAAYzM,EAAQ0M,OAAOvM,SAC5CH,EAAQsN,QAAQN,KAAOD,GAAU/M,EAAQsN,QAAQN,MAE1C,CACLvN,KvCH8B,qBuCI9BO,YAISuN,GAAqB,SAACpJ,GAAD,MAAS,CACzC1E,KAAMP,EACNc,QAAS,CACPmC,IAAI,UAAD,OAAYgC,GACf/B,UAAWiL,GACX/K,KAAM,CACJkL,mBAAoB,6CCjBX,I,OAAA,SAACC,EAAkBC,GAAe,IACzCC,EADwC,kLAQ1C,IAAMxJ,EAAKuE,KAAKC,MAAMiF,MAAMhM,OAAOuC,GAE/BuE,KAAKC,MAAMrG,KAAK6B,KAAO0J,OAAO1J,IAChCuE,KAAKC,MAAM+E,UAAUvJ,KAXmB,yCAezBsE,GAAY,IAAD,EACF,CAAEC,KAAKC,MAAMiF,MAAMhM,OAAOuC,GAAIsE,EAAUmF,MAAMhM,OAAOuC,IADnD,aAI1BuE,KAAKC,MAAM+E,UAAUhF,KAAKC,MAAMiF,MAAMhM,OAAOuC,MAnBL,+BAwB1C,OAAKuE,KAAKC,MAAMrG,KAAKrC,UAAYyI,KAAKC,MAAMmF,UAClC,kBAAC,GAAD,MAIR,kBAACL,EAAqB/E,KAAKC,WA7Ba,GACxBzD,aAsCtB,OAAOsH,aALiB,SAACjN,GAAD,MAAY,CAClCQ,UAAWR,EAAMQ,UACjB+N,UAAWvO,EAAMD,cAAcF,gBAAkB,KAGnB,CAAEsO,aAA3BlB,CAAwCmB,KCxC5BI,G,kDAMnB,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,KAAO7F,EAHK,E,qDAMT,IAAD,EAC4BmF,KAAKC,MAAhCqF,EADD,EACCA,UAAWrO,EADZ,EACYA,YAEnB,IAAKqO,EACH,OAAO,kBAAC,GAAD,MAGT,IAAMvK,EAAO9D,EAAYC,eAAe8I,KAAKU,MACvCE,EAAW9F,EAAOC,EAAM9D,EAAYE,QAASmO,GAEnD,OACE,yBAAKjG,IAAKuB,EAAUrE,UAAU,gBAAgBgD,IAAI,S,GAvBd/C,a,qBCArB+I,I,kLAKN1J,GACX,OACE,0BAAMU,UAAU,UAAUV,K,+BAIpB,IACAjC,EAASoG,KAAKC,MAAdrG,KAER,OACE,yBAAK2C,UAAU,eACb,6BAASA,UAAU,UACjB,0BAAMA,UAAU,mBAAhB,aADF,IACsD3C,EAAK4L,QAE3D,6BAASjJ,UAAU,WACjB,kBAAC,KAAD,CACEkJ,MAAO,EACPC,KAAM1F,KAAK2F,aAAa,aACxBC,MAAM,EACNC,UAAU,GAETjM,EAAKkM,e,GA1BsBtJ,cCAnBsG,I,8KAKT,IACAlJ,EAASoG,KAAKC,MAAdrG,KAER,OAAoB,IAAhBA,EAAK2E,OAEL,yBAAKhC,UAAU,eACb,uBAAGA,UAAU,aAAb,oCAMJ,yBAAKA,UAAU,eACb,wBAAIA,UAAU,uBACX3C,EAAKqC,KAAI,SAACC,GAAD,OACR,wBAAIK,UAAU,2BAA2B8G,IAAKnH,EAAKT,IACjD,kBAAC,GAAD,CAAY7B,KAAMsC,c,GArBMM,cCYvBuJ,I,OAdA,SAAC9F,GACd,OACE,4BAAQlJ,KAAK,SACXwF,UAAS,iBAAY0D,EAAM+F,SAAW,WAAa,IACnDvK,GAAIwE,EAAMxE,GACVwB,QAASgD,EAAMhD,QACf+I,SAAU/F,EAAM+F,UAEhB,0BAAMzJ,UAAU,SAAU0D,EAAMpE,OAChC,yBAAKU,UAAU,c,0CCyBN0J,I,OA9BA,SAAC,GAAkC,IAAhCrM,EAA+B,EAA/BA,KAAMsM,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OAClC,OACE,kBAAC,KAAD,CACEA,OAAQA,EACRC,eAAgBF,EAChBG,aAAa,EACb9J,UAAU,eACV+J,iBAAiB,iBAEjB,kBAAC,GAAD,CACErJ,QAASiJ,EACTrK,MAAM,MAER,kBAAC,KAAD,CACEU,UAAU,eACV9C,IAAKG,EAAKH,IACV8M,SAAO,EACPC,UAAQ,EACRC,OAAQ,OClBKC,I,mNAKnB7P,MAAQ,CACN8P,cAAc,G,EAGhBT,WAAa,kBACX,EAAKU,UAAS,SAAC/P,GAAD,MAAY,CACxB8P,cAAe9P,EAAM8P,kB,8DAIR,IACP3C,EAAWhE,KAAKC,MAAMrG,KAAtBoK,OAER,OAAsB,IAAlBA,EAAOzF,OAEP,uBAAGhC,UAAU,WACX,kBAAC,GAAD,CAAQV,MAAM,sBAAsBmK,UAAU,KAMlD,uBAAGzJ,UAAU,WACX,kBAAC,GAAD,CAAQV,MAAM,eAAeoB,QAAS+C,KAAKkG,aAC3C,kBAAC,GAAD,CACEtM,KAAMoK,EAAO,GACbmC,OAAQnG,KAAKnJ,MAAM8P,aACnBT,WAAYlG,KAAKkG,gB,+BAMf,IACAtM,EAASoG,KAAKC,MAAdrG,KAER,OACE,6BAAS2C,UAAU,cACjB,yBAAKA,UAAU,UAAf,gBACe,0BAAMA,UAAU,eAAe3C,EAAKsI,cAAgB,KACjE,8BAAM,kBAAC,KAAD,QAEPlC,KAAK6G,qB,GA/CyBrK,cCuBxBsK,GA1BE,SAAC,GAAqB,IAAnBlN,EAAkB,EAAlBA,KAAMiC,EAAY,EAAZA,MACxB,OACE,uBAAGU,UAAU,YACX,0BAAMA,UAAU,mBAAhB,UAAsCV,EAAtC,MACCjC,EAAK2E,OAAS,EACb,oCACG3E,EAAKqC,KAAI,SAACuJ,GAAD,OACR,kBAAC,IAAD,CAAMnC,IAAKmC,EAAO/J,GAAIyB,GAAE,0BAAqBsI,EAAO/J,KAClD,0BAAMc,UAAU,QAAQiJ,EAAO9J,WAKrC,kBAAC,IAAD,CAAM2H,IAAKzJ,EAAK6B,GAAIyB,GAAE,0BAAqBtD,EAAK6B,KAC9C,0BAAMc,UAAU,QAAQ3C,EAAK8B,SCCjCqL,G,8KAKa,IAAD,EACc/G,KAAKC,MAAzBrG,EADM,EACNA,KADM,EACAvC,UAEd,OACE,6BAASkF,UAAU,qBACjB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,UAAd,UACC3C,EAAKxC,OAAO6E,KAAI,SAAC+K,GAAD,OACf,kBAAC,WAAD,CAAU3D,IAAK2D,EAAMvL,IACnB,kBAAC,GAAD,CAAQI,MAAOmL,EAAMtL,YAI3B,yBAAKa,UAAU,UACb,wBAAIA,UAAU,UAAd,mBACA,2CAEE,6BACC3C,EAAKuI,cAER,4BAOA,sCAEE,6BACCvI,EAAKqN,QACJ,oCAAGrN,EAAKqN,QAAR,QAEA,0CAGJ,qCAEE,6BACCxF,GAAY7H,EAAKsN,SAEpB,sCAEE,6BACCzF,GAAY7H,EAAKuN,c,+BAOlB,IlBzEgBC,EkByEjB,EACqBpH,KAAKC,MAAzB5I,EADD,EACCA,UAAWuC,EADZ,EACYA,KAEbyN,EAAU,UAAMrH,KAAKC,MAAMzB,SAASM,SAA1B,cAEhB,OACE,yBAAKvC,UAAU,0BACb,kBAAC,GAAD,CACEoE,aAAc/G,EAAKgK,cACnB3M,YAAaI,EAAUJ,cAEzB,yBAAKsF,UAAU,kBACb,yBAAKA,UAAU,wBACb,6BAASA,UAAU,UACjB,kBAAC,GAAD,CACE+I,UAAW1L,EAAKqI,YAChBhL,YAAaI,EAAUJ,eAG3B,6BAASsF,UAAU,qBACjB,6BAASA,UAAU,UACjB,0BAAMA,UAAU,cACb3C,EAAK0D,MACN,6BACA,0BAAMf,UAAU,wBAAhB,IAAyC8E,GAAQzH,EAAKuI,eAAiB,IAAvE,MAEF,6BACA,kBAAC,GAAD,CAAWvI,MlBpGCwN,EkBoGiBxN,EAAKgL,QAAQN,KlBnGpD8C,EAAO,WACFA,EAAO,UAAcE,MAAK,SAAC9C,GAAD,MAA2B,aAAfA,EAAO+C,QAE7C,CAAE7L,KAAM,MkBgG8CG,MAAM,iBAEzD,kBAAC,GAAD,CACEjC,KAAMA,IAER,6BAAS2C,UAAU,YAChB3C,EAAK4N,SACJ,uBAAGjL,UAAU,WAAW3C,EAAK4N,SAE/B,2BAAI5N,EAAK6N,YAGZzH,KAAK0H,gBACN,6BAASnL,UAAU,qBACa,IAA7B3C,EAAKgL,QAAQ+C,KAAKpJ,QAA0D,IAA1CxC,OAAO6L,KAAKhO,EAAKgL,QAAQN,MAAM/F,OAChE,kBAAC,GAAD,CACEjB,MAAM,SAGR,kBAAC,GAAD,CACEA,MAAM,OACN4D,SAAS,wBACTC,OAAQkG,IAGZ,kBAAC,GAAD,CACEzN,KAAMA,EAAKgL,QAAQ+C,KACnBtQ,UAAWA,EACX8L,aAAckE,KAGlB,6BAAS9K,UAAU,wBACjB,kBAAC,GAAD,CACEe,MAAM,YAER,kBAAC,GAAD,CACE1D,KAAMA,EAAKiO,QAAQpQ,QAAQ2L,MAAM,EAAG,MAGxC,6BAAS7G,UAAU,gCACjB,kBAAC,GAAD,CACEe,MAAM,oBAER,kBAAC,GAAD,CACE1D,KAAMA,EAAKkO,gBAAgBrQ,QAC3BJ,UAAWA,EACX4L,UAAU,Y,GAjIEzG,aA+IbsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAMe,iBAG0B,GAAzBkM,CAA6BmB,GAAQ8B,GAAelC,KC5J7DkD,I,uLAQctM,GAChBuE,KAAKC,MAAMnC,QAAQe,KAAnB,0BAA2CpD,M,oCAG/BS,GACZ,OACE,oCACE,wBAAIK,UAAU,gBACZ,0BAAMA,UAAU,WAAWL,EAAKR,MAChC,6BACA,0BAAMa,UAAU,mBAAhB,QACA,6BACCL,EAAKyG,WAAazG,EAAKqL,Q,oCAMlBrL,GACZ,OACE,oCACE,wBAAIK,UAAU,aACZ,0BAAMA,UAAU,WAAWL,EAAKR,OAElC,wBAAIa,UAAU,gBACZ,0BAAMA,UAAU,mBAAhB,QACCL,EAAKyG,WAAazG,EAAKqL,Q,+BAMtB,IAAD,SAC+BvH,KAAKC,MAAnCrG,EADD,EACCA,KAAM8B,EADP,EACOA,KAAMsM,EADb,EACaA,cAEpB,OACE,2BAAOzL,UAAS,0BAAqByL,EAAgB,iBAAmB,KACtE,6BAASzL,UAAU,QAAnB,UAA8Bb,EAA9B,aAAuC9B,EAAK2E,OAA5C,MACA,+BACG3E,EAAKqC,KAAI,SAACC,GAAD,OACR,wBACEK,UAAU,aACV8G,IAAG,UAAKnH,EAAKT,GAAV,YAAgBS,EAAKyG,WAAazG,EAAKqL,KAC1CtK,QAAS,kBAAM,EAAKgL,kBAAkB/L,EAAKT,MAE1CuM,EACC,oCACE,wBAAIzL,UAAU,cACZ,kBAAC,GAAD,CACE3C,KAAMsC,EACN7E,UAAW,EAAK4I,MAAM5I,UACtBoL,mBAAmB,KAGtB,EAAKyF,cAAchM,IAGtB,oCACG,EAAKiM,cAAcjM,c,GAlEdM,cA6ET6D,eAAW0H,ICvEX,I,OAAA,SAAChD,EAAkBC,GAAe,IACzCoD,EADwC,4MAc5CC,gBAAkB,WAChB,EAAKpI,MAAMnC,QAAQwK,UAfuB,EAkB5CC,cAAgB,WAAO,IAAD,EACQ,EAAKtI,MAAzBrG,EADY,EACZA,KAAMvC,EADM,EACNA,UAERmR,EACJ,oCACE,kBAAC,KAAD,MADF,IACmB,qDAIrB,OACE,yBAAKjM,UAAU,6BACb,yBAAKA,UAAU,qBACb,6BAASA,UAAU,eACjB,6BAASA,UAAU,UACjB,kBAAC,GAAD,CACE+I,UAAW1L,EAAKqI,YAChBhL,YAAaI,EAAUJ,eAG3B,6BAASsF,UAAU,QACjB,0BAAMA,UAAU,cACb3C,EAAK0D,OAAS1D,EAAK8B,KACpB,6BACA,0BAAMa,UAAU,wBAAhB,IAAyC8E,GAAQzH,EAAKuI,cAAgBvI,EAAKwI,iBAAmB,IAA9F,MAEF,2BACE,kBAAC,GAAD,CAAQvG,MAAO2M,EAAavL,QAAS,EAAKoL,qBAIhD,6BAAS9L,UAAU,eACjB,kBAAC,GAAD,CACE3C,KAAM,EAAKqG,MAAMrG,KAAKgL,QAAQ+C,KAC9BtQ,UAAW,EAAK4I,MAAM5I,UACtBqE,KAAK,OACLsM,eAAe,KAGnB,6BAASzL,UAAU,eAChBR,OAAO6L,KAAKhO,EAAKgL,QAAQN,MAAMrI,KAAI,SAACwI,GAAD,OAClC,kBAAC,GAAD,CACEpB,IAAKoB,EACL7K,KAAMA,EAAKgL,QAAQN,KAAKG,GACxBpN,UAAW,EAAK4I,MAAM5I,UACtBqE,KAAM+I,WA9DwB,kEAQ1C,IAAKzE,KAAKC,MAAMrG,KAAKgL,QAAS,CAC5B,IAAMnJ,EAAKuE,KAAKC,MAAMiF,MAAMhM,OAAOuC,GACnCuE,KAAKC,MAAM+E,UAAUvJ,MAVmB,+BAwE1C,OAAKuE,KAAKC,MAAMrG,KAAKrC,UAAYyI,KAAKC,MAAMmF,UAClC,kBAAC,GAAD,MAIR,kBAACL,EAAD,iBACM/E,KAAKC,MADX,CAEEsI,cAAevI,KAAKuI,cACpBF,gBAAiBrI,KAAKqI,uBAhFgB,GACvB7L,aA0FvB,OAAO6D,YAAWyD,aALM,SAACjN,GAAD,MAAY,CAClCQ,UAAWR,EAAMQ,UACjB+N,UAAWvO,EAAMD,cAAcF,gBAAkB,KAGR,CAAEsO,aAA3BlB,CAAwCsE,MCjG/CK,GAAb,uKAOI,OAAOzI,KAAKC,MAAMsI,oBAPtB,GAAgC/L,aAejBsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAMe,iBAG0B,GAAzBkM,CAA6BsE,GAASK,GAAY5D,K,oBClBpD6D,GAA4B,SAACC,GAAD,OAAYC,OAASC,IAAIF,EAAO,UAAU9G,OAAO,eCE7EiH,GAAU,CACrBC,eAAgB,CAAEhS,KAAM,UAAW6E,MAAO,kBAAmBC,MAAO,yBACpEmN,cAAe,CAAEjS,KAAM,UAAW6E,MAAO,iBAAkBC,MAAO,wBAClEoN,WAAY,CAAElS,KAAM,UAAW6E,MAAO,oBAAqBC,MAAO,qBAClEqN,UAAW,CAAEnS,KAAM,UAAW6E,MAAO,mBAAoBC,MAAO,oBAChEsN,UAAW,CAAEpS,KAAM,UAAW6E,MAAO,sBAAuBC,MAAO,oBACnEuN,SAAU,CAAErS,KAAM,UAAW6E,MAAO,qBAAsBC,MAAO,mBACjEwN,gBAAiB,CAAEtS,KAAM,UAAW6E,MAAO,4BAA6BC,MAAO,2BAC/EyN,eAAgB,CAAEvS,KAAM,UAAW6E,MAAO,2BAA4BC,MAAO,2BAGlE0N,GAAe,CAC1BC,YAAa,CAAEzS,KAAM,2BAA4B6E,MAAO,KAAMC,MAAO,UACrE4N,SAAU,CAAE1S,KAAM,2BAA4B6E,MAAO,KAAMC,MAAO,SAOvD6N,GAAqB,iBAAO,CACvCC,eAAe,EACfC,eAAe,EACf,2BAA4BlB,GAA0B,KAG3CmB,GAAsB,iCAC9BH,KAD8B,CAEjC,4BD7BsCI,EC6Bc,ED7BJlB,OAASC,IAAIiB,EAAM,QAAQjI,OAAO,eC8BlF,2BAA4B6G,GAA0B,KD9BjB,IAACoB,GCiC3BC,GAAsB,iCAC9BL,KAD8B,CAEjC,iBAAkB,OAGPM,GAAa,SAACpQ,GACzB,IAAIqQ,EAAkB,GAqBtB,OAnBAlO,OAAOmO,QAAQtQ,GAAMW,SAAQ,YAAmB,IAAD,oBAAhB8I,EAAgB,KAAXxL,EAAW,KAC7C,GAAY,gBAARwL,IAAyBhJ,MAAMC,QAAQzC,IAA2B,IAAjBA,EAAM0G,OAK3D,OAAIlE,MAAMC,QAAQzC,GACToS,EAAgB5G,GAAOxL,EAAMoE,KAAI,SAACkO,GAAD,OACtCA,EAAQvO,SACPwO,KAAK,KAIDH,EAAgB5G,GADb,SAARA,EAC4BxL,EAGFA,EAAM+D,aAd3BqO,EAAgB5G,MAiBpB4G,GClDHI,GAAqB,SAAC/S,EAASO,GACnC,MAAO,CACLd,KtDN+B,sBsDO/BO,UACAO,UAIEyS,GAAwB,SAAChT,EAASO,GACtC,MAAO,CACLd,KtDbmC,0BsDcnCO,UACAO,UAIE0S,GAA6B,SAACjT,EAASO,GAC3C,MAAO,CACLd,KtDpBwC,+BsDqBxCO,UACAO,UAIS2S,GAAkB,iBAAO,CACpCzT,KtDb+B,sBsDgB3B0T,GAAmB,SAACC,EAAeC,EAAaC,EAAWC,GAC/DH,EAAcI,KAAOH,EAErB,IAAMI,EAAcf,GAAWU,GAE/B,MAAO,CACL3T,KAAMP,EACNc,QAAS,CACPmC,IAAK,kBACLC,UAAW,SAACpC,GAAD,MAAa,CACtBuT,EAAavT,EAASoT,KAExB9Q,KAAK,eAAMgR,IAAP,GAAuBG,M,qBCblBC,GApCE,SAAC,GAA6D,IACzEF,EADcH,EAA0D,EAA1DA,YAAaM,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAQtD,OALEL,EADkB,IAAhBH,EACKO,EAAY,GAAKP,EAEjBA,EAAc,EAIrB,kBAAC,KAAD,CACES,cAAgB,kBAAC,KAAD,MAChBC,UAAY,kBAAC,KAAD,MACZC,WAAW,MACXC,eAAe,aACfC,cAAc,OACdC,kBAAkB,gBAClBC,cAAc,YACdC,UAAWV,EACXW,UAAWd,EACXe,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAcZ,EACda,mBAAmB,aACnBC,sBAAsB,mBACtBC,gBAAgB,Y,sCCiGPC,I,OAlHI,SAAC,GAAsC,IAApCzQ,EAAmC,EAAnCA,KAAM0Q,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAAoB,EAC1BxP,oBAAS,GADiB,oBAChDyP,EADgD,KACxCC,EADwC,KAgBjDC,EAAgB,SAACC,EAAiBC,GAYtC,OACE,kBAAC,KAAD,CACEC,QAAS5Q,OAAO6Q,OAAOH,GACvBC,aAAcA,EACdzN,SAAU,SAACP,GAAD,OAfO,SAACA,GACfA,GAA0B,IAAjBA,EAAMH,SAClBG,EAAQ,CACN3H,KAAM,cACN8V,SAAS,IAIbR,EAAc3N,EAAO,eAOEoO,CAAapO,IAClCnC,UAAU,kBACVwQ,gBAAgB,kBAChBC,SAAS,EACTC,cAAc,KAwCpB,OACE,yBAAK1Q,UAAS,sBAAiB+P,EAAS,SAAW,KAChD5Q,GACC,yBAAKa,UAAU,OAAOU,QAAS,kBAAMsP,GAAYD,KAC/C,4BAAK5Q,GACL,4BACG4Q,EACC,kBAAC,KAAD,MAEA,kBAAC,KAAD,QAKPF,EAAQnQ,KAAI,SAACiR,GAAD,OACX,yBAAK7J,IAAK6J,EAAOxR,KAAMa,UAAU,eAC/B,4BAAK2Q,EAAOxR,MACK,aAAhBwR,EAAOnW,OA1FS2V,EA2FCQ,EAAOR,aAzF7B,kBAAC,KAAD,CACEC,QAAS5Q,OAAO6Q,OAAO9D,IACvB4D,aAAcA,EACdzN,SAAUoN,EACV9P,UAAU,kBACVwQ,gBAAgB,kBAChBE,cAAc,KAqFK,WAAhBC,EAAOnW,MACNyV,EAAcU,EAAOT,gBAAiBS,EAAOR,cAE9B,eAAhBQ,EAAOnW,MA1DK,SAAC2V,GACpB,IAAMS,EAAa,SAAC7L,EAAM8L,GACxBf,EAAc,eAAKe,EAAN,CAAmBxR,MAAO0F,MAGzC,OACE,oCACE,yBAAK/E,UAAU,aACb,0BAAMA,UAAU,SAASmQ,EAAa,GAAG7Q,OACzC,8BACE,kBAAC,KAAD,CACEwR,SAAUX,EAAa,GAAG9Q,MAC1BqD,SAAU,SAACqC,GAAD,OAAU6L,EAAW7L,EAAMoL,EAAa,KAClDY,WAAW,UACXC,gBAAgB,yBAChBC,qBAAmB,MAIzB,yBAAKjR,UAAU,WACb,0BAAMA,UAAU,SAASmQ,EAAa,GAAG7Q,OACzC,8BACE,kBAAC,KAAD,CACEwR,SAAUX,EAAa,GAAG9Q,MAC1BqD,SAAU,SAACqC,GAAD,OAAU6L,EAAW7L,EAAMoL,EAAa,KAClDY,WAAW,UACXC,gBAAgB,yBAChBC,qBAAmB,OAgCrBC,CAAaP,EAAOR,eAjGN,IAACA,QCkEZgB,GA5EI,SAAC,GAAkD,IAAhDjP,EAA+C,EAA/CA,aAAcpG,EAAiC,EAAjCA,UAAWoU,EAAsB,EAAtBA,gBAAsB,EACzC5P,mBAASxE,GADgC,oBAC5DxB,EAD4D,KACrD+P,EADqD,OAE/B/J,oBAAS,GAFsB,oBAE5D8Q,EAF4D,KAE5CC,EAF4C,KAK7DvB,EAAgB,SAACzS,GAAU,IACzB7C,EAAS6C,EAAT7C,KAUN,OARIsD,MAAMC,QAAQV,KAChB7C,EAAO6C,EAAK,GAAG7C,MAGb4W,GACFC,GAAU,SAACzQ,GAAD,OAAeyQ,GAAWzQ,MAGlCvD,EAAKiT,QACAjG,GAAS,SAACzJ,GAAD,sBAAqBA,EAArB,eAAiCvD,EAAK7C,KAAO,QAGxD6P,GAAS,SAACzJ,GAAD,sBAAqBA,EAArB,eAAiCpG,EAAO6C,QAG1D,OACE,oCACE,kBAAC,GAAD,CACE8B,KAAK,OACL2Q,cAAeA,EACfD,QACE,CACE,CACE1Q,KAAM,aACN3E,KAAM,WACN2V,aAAc7V,EAAMgX,YAK5B,kBAAC,GAAD,CACEnS,KAAK,UACL2Q,cAAeA,EACfD,QACE,CACE,CACE1Q,KAAM,SACN3E,KAAM,SACN0V,kBACAC,aAAc7V,EAAMiX,aAEtB,CACEpS,KAAM,gBACN3E,KAAM,aACN2V,aAAc,CACZ7V,EAAM0S,GAAaC,YAAYzS,OAASwS,GAAaC,YACrD3S,EAAM0S,GAAaE,SAAS1S,OAASwS,GAAaE,cAM5D,4BACElN,UAAS,oCAAiCoR,EAAiB,WAAa,IACxE1Q,QAAS,WAAQwB,EAAa5H,GAAQ+W,GAAU,SAACzQ,GAAD,OAAeyQ,GAAWzQ,QAE1E,wBAAIZ,UAAU,SAAd,aCxDFwR,I,OAAe,CACnBF,QAAS/E,GAAQC,eACjB+B,KAAM,IAGO,YAAC/F,EAAkBiJ,EAAiBhM,GAAsD,IAA5CiM,EAA2C,uDAA5BF,GAAcG,EAAc,uCAChGC,EADgG,4MAYpGtX,MAAQ,CACNuX,aAAa,EACbzD,YAAa,EACb9S,MAAO,MAf2F,EA2CpG4G,aAAe,SAAC4P,GACd,EAAKzH,SAAS,CAAE/O,MAAOwW,EAAU1D,YAAa,IAC9C,EAAK3F,UAAUqJ,IA7CmF,EAgDpGlD,gBAAkB,SAACvR,GACjB,IAAM0U,EAAe1U,EAAKyT,SAAW,EACrC,EAAKzG,SAAS,CAAE+D,YAAa2D,EAAcF,aAAa,KAlD0C,EAoFpG7F,cAAgB,WAAO,IAAD,EACmB,EAAKtI,MAApCrG,EADY,EACZA,KAAMvC,EADM,EACNA,UAAW+N,EADL,EACKA,UAEzB,OACE,yBAAK7I,UAAU,yCACb,6BAASA,UAAU,cAChB2R,GAEH,6BAAS3R,UAAU,WACjB,6BAASA,UAAU,WAChB,EAAKgS,qBAER,6BAAShS,UAAU,cACO,IAAvB3C,EAAK4U,eACJ,uBAAGjS,UAAU,YAAb,qDAED6I,EACC,yBAAK7I,UAAU,UACb,kBAAC,GAAD,OAGF,oCACE,wBAAIA,UAAU,eACX3C,EAAKnC,QAAQwE,KAAI,SAACC,GAAD,OAChB,wBAAIK,UAAU,cAAc8G,IAAKnH,EAAKT,IACpC,kBAAC,GAAD,CACE7B,KAAMsC,EACN7E,UAAWA,EACX2K,SAAUA,SAKjB,EAAKyM,sBArHgF,kEAmB7FzO,KAAKC,MAAMrG,KAAKrC,UACnByI,KAAKgF,eAAU9M,EAAW,KApBsE,6CAyB7F8H,KAAKC,MAAMnC,QAAQU,SAASM,SAASoG,MAAM,gCAC9ClF,KAAKC,MAAMuK,oBA1BqF,yCA8BjFzK,EAAW5C,GACxBA,EAAUwN,cAAgB3K,KAAKnJ,MAAM8T,aACvC3K,KAAKgF,UACHhF,KAAKC,MAAMrG,KAAK/B,YAAQK,EACxB8H,KAAKnJ,MAAM8T,eAlCmF,kCAuCtD,IAApC9S,EAAmC,uDAA3BoW,EAActD,EAAa,uCAC3C3K,KAAKC,MAAM+N,gBAAgBnW,EAAO8S,KAxCgE,0CAqD/E,IACXxO,EAAgB6D,KAAKC,MAAM5I,UAA3B8E,YACA8R,EAAiBjO,KAAKC,MAAtBgO,aAER,OACE,kBAAC,GAAD,CACExP,aAAcuB,KAAKvB,aACnBsP,aAAcE,EACd5V,UAAW2H,KAAKC,MAAMrG,KAAK/B,MAC3B4U,gBAAiBtQ,MA9D6E,uCAmElF,IACRvC,EAASoG,KAAKC,MAAdrG,KAER,OAAIA,EAAK8U,YAAc,EACb,8BAIR,kBAAC,GAAD,CACE/D,YAAa3K,KAAKnJ,MAAM8T,YACxBM,WAAYrR,EAAK8U,YACjBxD,UAAWtR,EAAK/B,MAAMiT,KACtBK,gBAAiBnL,KAAKmL,oBA/EwE,+BA+HlG,OAAKnL,KAAKC,MAAMrG,KAAKrC,SAKnB,kBAACwN,EAAD,iBACM/E,KAAKC,MADX,CAEEsI,cAAevI,KAAKuI,iBANd,kBAAC,GAAD,UAhIwF,GAC/E/L,aA2IjBmS,EAAkB,SAAC9X,GAAD,MAAY,CAClCQ,UAAWR,EAAMQ,UACjB+N,UAAWvO,EAAMD,cAAcF,gBAAkB,IAG7CmN,EAAiB,CACrBmK,kBACAxD,oBAGF,OAAOnK,YAAWyD,YAAQ6K,EAAiB9K,EAAzBC,CAAyCqK,KCjKvDS,G,uKAOF,OAAO5O,KAAKC,MAAMsI,oB,GAPA/L,aAePsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAM2B,kBAG0B,GAAzBsL,CACZqK,GACCS,ILmC+B,SAAClE,EAAeC,GACjD,OAAOF,GAAiBC,EAAeC,EAAajB,GAAoBW,MKlCtExH,QACA3K,EAAW,mBCpBT2W,G,uKAOF,OAAO7O,KAAKC,MAAMsI,oB,GAPC/L,aAeRsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAM6B,0BAG0B,GAAzBoL,CACZqK,GACCU,IN2CuC,SAACnE,EAAeC,GACzD,OAAOF,GAAiBC,EAAeC,EAAad,GAAqBU,MM1CvE1H,QACA3K,EACA,oBCpBE6V,GAAe,CACnBF,QAAS/E,GAAQG,WACjB6B,KAAM,GAGFgE,G,uKAOF,OAAO9O,KAAKC,MAAMsI,oB,GAPC/L,aAeRsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAM4B,qBAG0B,GAAzBqL,CACZqK,GACCW,IPiCuC,SAACpE,EAAeC,GACzD,OAAOF,GAAiBC,EAAeC,EAAaZ,GAAqBO,MOhCvEzH,GACAkL,GACA,qBC3BEgB,GAAgB,SAACzX,GAIrB,OAHAA,EAAQ0M,OAASD,GAAYzM,EAAQ0M,OAAOvM,SAC5CH,EAAQsN,QAAQN,KAAOD,GAAU/M,EAAQsN,QAAQN,MAE1C,CACLvN,K9DG0B,iB8DF1BO,YAIS0X,GAAiB,SAACvT,GAAD,MAAS,CACrC1E,KAAMP,EACNc,QAAS,CACPmC,IAAI,OAAD,OAASgC,GACZ/B,UAAWqV,GACXnV,KAAM,CACJkL,mBAAoB,6CCRpBmK,G,8KAKa,IAAD,EACcjP,KAAKC,MAAzBrG,EADM,EACNA,KADM,EACAvC,UAEd,OACE,6BAASkF,UAAU,qBACjB,yBAAKA,UAAU,UACb,wBAAIA,UAAU,UAAd,UACC3C,EAAKxC,OAAO6E,KAAI,SAAC+K,GAAD,OACf,kBAAC,WAAD,CAAU3D,IAAK2D,EAAMvL,IACnB,kBAAC,GAAD,CAAQI,MAAOmL,EAAMtL,YAI3B,yBAAKa,UAAU,UACb,wBAAIA,UAAU,UAAd,mBACA,6CAEE,6BACC3C,EAAKwI,gBAER,4BAOA,gDAEE,6BACCxI,EAAKsV,mBAER,iDAEE,6BACCtV,EAAKuV,oBAER,+CAEE,6BACCvV,EAAKwV,iBAAiB,GAAtB,UAA8BxV,EAAKwV,iBAAiB,GAApD,QAA+D,S,+BAOhE,IAAD,EACqBpP,KAAKC,MAAzB5I,EADD,EACCA,UAAWuC,EADZ,EACYA,KAEbyN,EAAU,UAAMrH,KAAKC,MAAMzB,SAASM,SAA1B,cAEhB,OACE,yBAAKvC,UAAU,0BACb,kBAAC,GAAD,CACEoE,aAAc/G,EAAKgK,cACnB3M,YAAaI,EAAUJ,cAEzB,yBAAKsF,UAAU,kBACb,yBAAKA,UAAU,wBACb,6BAASA,UAAU,UACjB,kBAAC,GAAD,CACE+I,UAAW1L,EAAKqI,YAChBhL,YAAaI,EAAUJ,eAG3B,6BAASsF,UAAU,qBACjB,6BAASA,UAAU,UACjB,0BAAMA,UAAU,cACb3C,EAAK8B,KACN,6BACA,0BAAMa,UAAU,wBAAhB,IAAyC8E,GAAQzH,EAAKwI,iBAAmB,IAAzE,MAEF,6BACA,kBAAC,GAAD,CAAWxI,KAAMA,EAAKyV,WAAYxT,MAAM,gBAE1C,kBAAC,GAAD,CACEjC,KAAMA,IAER,6BAAS2C,UAAU,YACjB,2BAAI3C,EAAK6N,YAGZzH,KAAK0H,gBACN,6BAASnL,UAAU,qBACjB,kBAAC,GAAD,CACEe,MAAM,OACN4D,SAAS,wBACTC,OAAQkG,IAEV,kBAAC,GAAD,CACEzN,KAAMA,EAAKgL,QAAQ+C,KACnBtQ,UAAWA,EACX8L,aAAckE,KAGlB,6BAAS9K,UAAU,wBACjB,kBAAC,GAAD,CACEe,MAAM,YAER,kBAAC,GAAD,CACE1D,KAAMA,EAAKiO,QAAQpQ,QAAQ2L,MAAM,EAAG,MAGxC,6BAAS7G,UAAU,gCACjB,kBAAC,GAAD,CACEe,MAAM,oBAER,kBAAC,GAAD,CACE1D,KAAMA,EAAKkO,gBAAgBrQ,QAAQ2L,MAAM,EAAG,IAC5C/L,UAAWA,EACX4L,UAAU,Y,GApHFzG,aAkITsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAMkB,aAG0B,GAAzB+L,CAA6BmB,GAAQgK,GAAWD,KC3IlDM,GAAb,uKAOI,OAAOtP,KAAKC,MAAMsI,oBAPtB,GAA4B/L,aAebsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAMkB,aAG0B,GAAzB+L,CAA6BsE,GAASkH,GAAQN,KCTvDO,GAAiB,SAACjY,EAASO,GAC/B,MAAO,CACLd,KjEE2B,kBiED3BO,UACAO,UAIE2X,GAAoB,SAAClY,EAASO,GAClC,MAAO,CACLd,KjEL+B,sBiEM/BO,UACAO,UAQE4X,GAAe,SAAC/E,EAAeC,EAAaC,EAAWC,GAC3DH,EAAcI,KAAOH,EAErB,IAAMI,EAAcf,GAAWU,GAE/B,MAAO,CACL3T,KAAMP,EACNc,QAAS,CACPmC,IAAK,eACLC,UAAW,SAACpC,GAAD,MAAa,CACtBuT,EAAavT,EAASoT,KAExB9Q,KAAK,eAAMgR,IAAP,GAAuBG,MCrC3B6D,G,uKAOF,OAAO5O,KAAKC,MAAMsI,oB,GAPA/L,aAePsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAM8B,cAG0B,GAAzBmL,CACZqK,GACCS,IDyB2B,SAAClE,EAAeC,GAC7C,OAAO8E,GAAa/E,EAAeC,EAAajB,GAAoB6F,MCxBlE1M,QACA3K,EACA,mBCpBE6V,GAAe,CACnBF,QAAS/E,GAAQG,WACjB6B,KAAM,GAGFgE,G,uKAOF,OAAO9O,KAAKC,MAAMsI,oB,GAPC/L,aAeRsH,gBAJS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAM+B,iBAG0B,GAAzBkL,CACZqK,GACCW,IFuBmC,SAACpE,EAAeC,GACrD,OAAO8E,GAAa/E,EAAeC,EAAaZ,GAAqByF,MEtBnE3M,GACAkL,GACA,qBC5BE2B,GAAa,SAAC9V,EAAMyJ,EAAKsM,GAC7B,OAAK/V,EAIEA,EAAKgW,MAAK,SAACC,EAAGC,GACnB,MAA2B,SAAvBH,EACK,IAAIpO,KAAKuO,EAAEzM,IAAQ,IAAI9B,KAAKsO,EAAExM,IAC5BsM,EACFA,EAAmBG,EAAEzM,IAAQsM,EAAmBE,EAAExM,IAElDyM,EAAEzM,GAAOwM,EAAExM,MAEnBD,MAAM,EAAG,IAXH,IAyBL2M,GAAoB,SAACnW,EAAMoW,GAC/B,IAAIC,EAAa,GAwCjB,OAtCAlU,OAAO6L,KAAKhO,GAAMW,SAAQ,SAAC2V,GAEzBR,GAAW9V,EAAKsW,GAAWF,EAAS,QAGpCpW,EAAKsW,GAAU3V,SAAQ,SAAC2B,GACtB,IAAMiU,EAAO9O,GAAQnF,EAAK8T,KAAa,EACjCI,EAAuB,IAATD,EAEfF,EAAWvL,eAAewL,KAC7BD,EAAWC,GAAY,IAGpBD,EAAWC,GAAUxL,eAAeyL,KACvCF,EAAWC,GAAUC,GAAQ,IAG/B,IACIE,EADAC,EAAcL,EAAWC,GAAUC,GAIrCE,EADED,EACiBE,EAAYhJ,MAAK,SAACiJ,GAAD,OAAcA,EAAS9U,KAAOS,EAAKT,MAEpD6U,EAAYA,EAAY/R,OAAS,GAInD6R,GAAeC,GACfA,GAAoBA,EAAiB5U,KAAOS,EAAKT,IAEjD4U,EAAiBG,OAAS,IAAI3R,KAAK3C,GAEpCoU,EAAYzR,KAAK3C,SAMhB+T,GAGHQ,GAAoB,SAACnZ,GAUzB,OATAA,EAAQoZ,cAAgBX,GAAkBzY,EAAQoZ,cAAe,gBACjEpZ,EAAQqZ,WAAaZ,GAAkBzY,EAAQqZ,WAAY,kBAE3DrZ,EAAQsZ,eA3DgB,SAACC,GACzB,IAAMC,EAAiB,IAAIC,IAE3B,OAAOF,EAAM3D,QAAO,SAAChR,GACnB,IAAM8U,EAAYF,EAAeG,IAAI/U,EAAKT,IAG1C,OAFAqV,EAAejI,IAAI3M,EAAKT,KAEhBuV,KAoDeE,CAAkBxB,GACzCpY,EAAQ6Z,iBAAiBxJ,KAAKvE,QAC9B,aACAgO,aAGK,CACLra,KpErE8B,qBoEsE9BO,YCzFS+Z,GAAU,SAACC,GAAD,OAAYvV,OAAO6L,KAAK0J,GAAQ/S,OAAS,GCQ1DgT,I,mNAMJ1a,MAAQ,CACN2a,cAAe,gB,EAGjBC,cAAgB,SAAChW,EAAIiD,GACf,EAAK7H,MAAM2a,gBAAkB/V,EAC/BiD,EAAMC,iBAEN,EAAKiI,SAAS,CAAE4K,cAAe/V,K,EAInCiW,YAAc,SAACjW,GACb,IAAMkW,EAAY,WAAoC,iBAA7B,EAAK9a,MAAM2a,cAAmC,SAAW,KAAhE,oBAAgF/V,GAClG,EAAKwE,MAAMnC,QAAQe,KAAK8S,I,uEAGA,IAAD,OACvB,OACE,yBAAKpV,UAAU,mBACb,kBAAC,GAAD,CAAQV,MAAM,SACZU,UAAU,OACVyJ,UAAWqL,GAAQrR,KAAKC,MAAM2R,cAC9B3U,QAAS,SAACyB,GAAD,OAAW,EAAK+S,cAAc,eAAgB/S,MAEzD,kBAAC,GAAD,CACE7C,MAAM,SACNmK,UAAWqL,GAAQrR,KAAKC,MAAM4R,WAC9B5U,QAAS,SAACyB,GAAD,OAAW,EAAK+S,cAAc,YAAa/S,S,qCAM7CxC,GAAwB,IAAD,OAAjB4V,IAAiB,yDACpC,OACE,wBAAIvV,UAAU,aAAaU,QAAS,kBAAM,EAAKyU,YAAYxV,EAAKT,MAC9D,wBAAIc,UAAU,aACXuV,GACC,oCACGzQ,GAAQnF,EAAKiG,cAAgBjG,EAAKkG,iBAAmB,MAI5D,4BACE,0BAAM7F,UAAU,cAAcL,EAAKoB,OAASpB,EAAKR,MAAQ,KACxDQ,EAAK8G,cAAgB,GACpB,0BAAMzG,UAAU,mBAAhB,YACQL,EAAK8G,cADb,YAC8B9G,EAAK8G,cAAgB,EAAI,WAAa,UADpE,MAIF,0BAAMzG,UAAU,mBAAhB,QACCL,EAAKyG,WAAazG,EAAKqL,KAAO,Q,kCAM3BwK,EAAUC,GAAiB,IAAD,OAC9BpY,EAAOoG,KAAKC,MAAM8R,GAExB,OACE,2BAAOxV,UAAU,cACf,6BAASA,UAAU,QAAQyV,GAC3B,+BACGjW,OAAO6L,KAAKhO,EAAKoY,IAAiBC,UAAUhW,KAAI,SAACoH,GAAD,OAC/C,wBAAIA,IAAKA,EAAK9G,UAAU,eACtB,4BACE,+BACE,+BACG3C,EAAKoY,GAAgB3O,GAAKpH,KAAI,SAACC,GAAD,OAC7B,kBAAC,WAAD,CAAUmH,IAAKnH,EAAKT,IACjB,EAAKyW,eAAehW,GACpBA,EAAKsU,QACJ,oCACGtU,EAAKsU,OAAOvU,KAAI,SAACkW,EAAOC,GAAR,OACf,kBAAC,WAAD,CAAU/O,IAAG,UAAKnH,EAAKT,GAAV,YAAgB2W,IAC1B,EAAKF,eAAeC,GAAO,uB,+BAiBhD,IAAD,OACDJ,EAAW/R,KAAKnJ,MAAM2a,cAE5B,OAAKH,GAAQrR,KAAKC,MAAM8R,IAOtB,oCACG/R,KAAKqS,yBACLtW,OAAO6L,KAAK5H,KAAKC,MAAM8R,IAAW9V,KAAI,SAAC+V,GAAD,OACrC,kBAAC,WAAD,CAAU3O,IAAG,UAAK0O,GAAL,OAAgBC,IAC1B,EAAKM,YAAYP,EAAUC,QAThC,uBAAGzV,UAAU,gBAAb,qC,GAzGmBC,cA0HZ6D,eAAWkR,IChHpBgB,I,yDAUJ,WAAYtS,GAAQ,IAAD,8BACjB,cAAMA,IALRpJ,MAAQ,CACN2b,mBAAmB,GAGF,EAmEnBC,gBAAkB,WAChB,EAAK7L,UAAS,SAAC/P,GAAD,MAAY,CACxB2b,mBAAoB3b,EAAM2b,uBAnE5B,EAAKE,aAAetS,IAAMuS,YAC1B,EAAKC,sBAAwBxS,IAAMuS,YAHlB,E,gEAOjB,IAAMlX,EAAKuE,KAAKC,MAAMiF,MAAMhM,OAAOuC,GACnCuE,KAAKC,MAAM4S,mBAAmBpX,K,2CAK3BuE,KAAKnJ,MAAM2b,oBACZxS,KAAK0S,aAAarU,ShDzBG,SAAC,GAA8D,IAA5DyU,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,YACvD,OADuF,EAAnBC,aAC9CF,GAAgBC,EAAcF,EgDyB/CI,CAAYlT,KAAK0S,aAAarU,UAE/B2B,KAAK4S,sBAAsBvU,QAAQ8U,UAAUtK,IAAI,U,0CAKnD,IAAMjP,EAAOoG,KAAKC,MAAMrG,KAAKwZ,aAE7B,OACE,0BAAM7W,UAAU,gBACb3C,EAAKyZ,aACJ,uBAAG7T,KAAI,mCAA8B5F,EAAKyZ,cACxC,kBAAC,KAAD,OAGHzZ,EAAK0Z,cACJ,uBAAG9T,KAAI,oCAA+B5F,EAAK0Z,eACzC,kBAAC,KAAD,OAGH1Z,EAAK2Z,YACJ,uBAAG/T,KAAI,kCAA6B5F,EAAK2Z,aACvC,kBAAC,KAAD,U,6CAOc,IACd3Z,EAASoG,KAAKC,MAAdrG,KAEF4Z,EAAY,SAAC5X,GAAD,OAAWhC,EAAKgC,GAAShC,EAAKgC,GAAS,KAEzD,OACE,6BAASW,UAAU,cACjB,4BACE,4BACE,0BAAMA,UAAU,mBAAhB,cADF,IACuDiX,EAAU,yBAEjE,4BACA,0BAAMjX,UAAU,mBAAhB,aADA,IACoDiX,EAAU,aAE9D,4BACE,0BAAMjX,UAAU,mBAAhB,mBADF,IAC4DiX,EAAU,uB,wCAc5E,IAAKxT,KAAKC,MAAMrG,KAAK6Z,UACnB,OACE,6BAASlX,UAAU,oBACjB,wCACA,yBAAKA,UAAU,WAAf,kDAON,IAAImX,EACF,iDACY,kBAAC,KAAD,OAYd,OARI1T,KAAKnJ,MAAM2b,oBACbkB,EACE,iDACY,kBAAC,KAAD,QAMd,6BAASnX,UAAU,oBACjB,wCACA,yBACEA,UAAS,kBAAayD,KAAKnJ,MAAM2b,kBAAoB,WAAa,UAClErT,IAAKa,KAAK0S,cAET1S,KAAKC,MAAMrG,KAAK6Z,WAGnB,0BACElX,UAAU,gBACV4C,IAAKa,KAAK4S,sBACV3V,QAAS+C,KAAKyS,iBAEbiB,M,+BAMC,IAAD,EACqB1T,KAAKC,MAAzBrG,EADD,EACCA,KAAMvC,EADP,EACOA,UAEd,OAAKuC,EAAKrC,UAAYyI,KAAKC,MAAMmF,UACvB,kBAAC,GAAD,MAIR,yBAAK7I,UAAU,4BACb,yBAAKA,UAAU,yCACb,6BAASA,UAAU,UACjB,kBAAC,GAAD,CACE+I,UAAW1L,EAAK8I,aAChBzL,YAAaI,EAAUJ,eAG3B,6BAASsF,UAAU,uBACjB,6BAASA,UAAU,SACjB,0BAAMA,UAAU,cAAc3C,EAAK8B,MACnC,6BACCsE,KAAK2T,qBAEP3T,KAAK4T,uBACL5T,KAAK6T,mBAER,6BAAStX,UAAU,wBACjB,kBAAC,GAAD,CACEe,MAAM,cAER,kBAAC,GAAD,CACE1D,KAAMA,EAAKgX,eACXvZ,UAAWA,EACX4L,UAAU,KAGd,6BAAS1G,UAAU,0BACjB,kBAAC,GAAD,CACEe,MAAM,YAER,kBAAC,GAAD,CACEsU,aAAchY,EAAK8W,cACnBmB,UAAWjY,EAAK+W,oB,GA3KTnU,cA0LNsH,gBANS,SAACjN,GAAD,MAAY,CAClCQ,UAAWR,EAAMQ,UACjB+N,UAAWvO,EAAMD,cAAcF,gBAAkB,EACjDkD,KAAM/C,EAAMmB,iBAG0B,CAAE6a,mBH/GR,SAACpX,GAAD,MAAS,CACzC1E,KAAMP,EACNc,QAAS,CACPmC,IAAI,WAAD,OAAagC,GAChB/B,UAAW+W,GACX7W,KAAM,CACJkL,mBAAoB,8DGyGXhB,CAAiDyO,I,SClM1DuB,GAAmB,SAACxc,GAAD,MAAc,CACrCP,KxEU+B,oBwET/BO,YAGIyc,GAAmB,SAACzc,GAAD,MAAc,CACrCP,KxEM+B,oBwEL/BO,YAGI0c,GAAe,SAAC1c,GAAD,MAAc,CACjCP,KxEE2B,gBwED3BO,YCJI2c,I,mNAKJpd,MAAQ,CACNqd,WAAY,SACZ/b,OAAQ,CACNwS,YAAa,GAEf1S,MAAO,CACL0S,YAAa,GAEfvS,GAAI,CACFuS,YAAa,I,EAqDjBQ,gBAAkB,SAACvR,GAAU,IACnB/C,EADkB,gBAClBA,MAEFyX,EAAe1U,EAAKyT,SAAW,EACrC,EAAKzG,SAAL,eAAiB/P,EAAMqd,WAAa,CAAEvJ,YAAa2D,M,EAGrD6F,iBAAmB,SAACpd,GAClB,EAAK6P,SAAS,CAAEsN,WAAYnd,K,kEAxDxBiJ,KAAKC,MAAMrG,KAAKvB,WAClB2H,KAAK4G,SAAS5G,KAAKC,MAAMrG,KAAKvB,WAG5B2H,KAAKC,MAAMzB,SAAS3H,QACtBmJ,KAAKC,MAAMmU,kBAAkBpU,KAAKC,MAAMzB,SAAS3H,MAAO,GACxDmJ,KAAKC,MAAMoU,kBAAkBrU,KAAKC,MAAMzB,SAAS3H,MAAO,GACxDmJ,KAAKC,MAAMqU,cAActU,KAAKC,MAAMzB,SAAS3H,MAAO,M,yCAIrCkJ,EAAW5C,GAC5B,IAAMoX,EAAkBvU,KAAKnJ,MAAMqd,WAQnC,GANInU,EAAUvB,SAAS3H,QAAUmJ,KAAKC,MAAMzB,SAAS3H,QACnDmJ,KAAKC,MAAMmU,kBAAkBpU,KAAKC,MAAMzB,SAAS3H,MAAO,GACxDmJ,KAAKC,MAAMoU,kBAAkBrU,KAAKC,MAAMzB,SAAS3H,MAAO,GACxDmJ,KAAKC,MAAMqU,cAActU,KAAKC,MAAMzB,SAAS3H,MAAO,IAGlDsG,EAAUoX,GAAiB5J,cAAgB3K,KAAKnJ,MAAM0d,GAAiB5J,YAAa,CACtF,IAAM6J,EAAcxU,KAAKC,MAAMzB,SAAS3H,MAClC8T,EAAc3K,KAAKnJ,MAAM0d,GAAiB5J,YAEhD,OAAO4J,GACL,IAAK,SACHvU,KAAKC,MAAMmU,kBAAkBI,EAAa7J,GAC1C,MACF,IAAK,QACH3K,KAAKC,MAAMoU,kBAAkBG,EAAa7J,GAC1C,MACF,IAAK,KACH3K,KAAKC,MAAMqU,cAAcE,EAAa7J,GACtC,MACF,QACE,OAAO,S,6CAMT3K,KAAKC,MAAMnC,QAAQU,SAASM,SAASoG,MAAM,gDAC7ClF,KAAKC,MAAMwU,mBAAmBzU,KAAKnJ,OAEnCmJ,KAAKC,MAAMuK,oB,uCAeG,IACR3T,EAAUmJ,KAAVnJ,MACF6d,EAAc1U,KAAKC,MAAMrG,KAAK/C,EAAMqd,YAE1C,OAAIQ,EAAYhG,YAAc,EACpB,8BAIR,kBAAC,GAAD,CACE/D,YAAa9T,EAAMA,EAAMqd,YAAYvJ,YACrCM,WAAYyJ,EAAYhG,YACxBxD,UAAW,EACXC,gBAAiBnL,KAAKmL,oB,+BAKlB,IAAD,SACgCnL,KAAKC,MAApCrG,EADD,EACCA,KAAMvC,EADP,EACOA,UAAW+N,EADlB,EACkBA,UACjBvO,EAAUmJ,KAAVnJ,MAER,IAAKmJ,KAAKC,MAAMrG,KAAKrC,SACnB,OAAQ,kBAAC,GAAD,MAGV,IAAMmd,EAAc9a,EAAK/C,EAAMqd,YAC/B,OAAKQ,EAKH,yBAAKnY,UAAU,yCACb,6BAASA,UAAU,cACjB,iDAEF,6BAASA,UAAU,WACjB,6BAASA,UAAU,WACjB,yBACEA,UAAS,sBAAiB3C,EAAKzB,QAAwC,IAA9ByB,EAAKzB,OAAOqW,cAAsB,WAAa,GAA/E,YAA0G,WAArB3X,EAAMqd,WAA0B,WAAa,IAC3IjX,QAAS,kBAAM,EAAKkX,iBAAiB,YAErC,yBAAK5X,UAAU,QACb,sCACA,iCAAO3C,EAAKzB,OAASyB,EAAKzB,OAAOqW,cAAgB,EAAjD,QAGJ,yBACEjS,UAAS,sBAAiB3C,EAAK3B,OAAsC,IAA7B2B,EAAK3B,MAAMuW,cAAsB,WAAa,GAA7E,YAAwG,UAArB3X,EAAMqd,WAAyB,WAAa,IACxIjX,QAAS,kBAAM,EAAKkX,iBAAiB,WAErC,yBAAK5X,UAAU,QACb,sCACA,iCAAO3C,EAAK3B,MAAQ2B,EAAK3B,MAAMuW,cAAgB,EAA/C,QAGJ,yBACEjS,UAAS,sBAAiB3C,EAAKxB,IAAgC,IAA1BwB,EAAKxB,GAAGoW,cAAsB,WAAa,GAAvE,YAAkG,OAArB3X,EAAMqd,WAAsB,WAAa,IAC/HjX,QAAS,kBAAM,EAAKkX,iBAAiB,QAErC,yBAAK5X,UAAU,QACb,sCACA,iCAAO3C,EAAKxB,GAAKwB,EAAKxB,GAAGoW,cAAgB,EAAzC,SAIN,6BAASjS,UAAU,cACc,IAA9BmY,EAAYlG,eACX,uBAAGjS,UAAU,YAAb,qDAED6I,EACC,yBAAK7I,UAAU,UACb,kBAAC,GAAD,OAGF,oCACE,wBAAIA,UAAU,eACXmY,EAAYjd,QAAQwE,KAAI,SAACC,GAAD,OACvB,wBAAIK,UAAU,cAAc8G,IAAKnH,EAAKT,IACd,WAArB5E,EAAMqd,WACL,kBAAC,GAAD,CACEta,KAAMsC,EACN7E,UAAWA,IAGb,kBAAC,GAAD,CACEuC,KAAMsC,EACN7E,UAAWA,EACX2K,SAA+B,OAArBnL,EAAMqd,WAAsBrR,GAAeA,UAM9D7C,KAAKyO,qBAlER,kC,GA1GOjS,cA4LfqH,GAAiB,CACrBuQ,kBD9J+B,SAAC1J,EAAeC,GAG/C,OAFAD,EAAcI,KAAOH,EAEd,CACL5T,KAAMP,EACNc,QAAS,CACPmC,IAAK,iBACLC,UAAW,SAACpC,GAAD,MAAa,CACtBwc,GAAiBxc,KAEnBsC,KAAK,enBtCoC,CAC7C+P,eAAe,GmBqCP,GAAsCe,MCqJ9C2J,kBD9K+B,SAAC3J,EAAeC,GAG/C,OAFAD,EAAcI,KAAOH,EAEd,CACL5T,KAAMP,EACNc,QAAS,CACPmC,IAAK,gBACLC,UAAW,SAACpC,GAAD,MAAa,CACtByc,GAAiBzc,KAEnBsC,KAAK,enBvBoC,CAC7C+P,eAAe,GmBsBP,GAAsCe,MCqK9C4J,cDjJ2B,SAAC5J,EAAeC,GAG3C,OAFAD,EAAcI,KAAOH,EAEd,CACL5T,KAAMP,EACNc,QAAS,CACPmC,IAAK,aACLC,UAAW,SAACpC,GAAD,MAAa,CACtB0c,GAAa1c,KAEfsC,KAAK,enBrDoC,CAC7C+P,eAAe,GmBoDP,GAAsCe,MCwI9C+J,mBDzLgC,SAACnd,GAAD,MAAc,CAC9CP,KxEF8B,mBwEG9BO,YCwLAkT,gBDrL6B,iBAAO,CACpCzT,KxEL+B,uByE4LlB+M,gBAdS,SAACjN,GAAD,MAAY,CAClC+C,KAAM/C,EAAMyB,OACZjB,UAAWR,EAAMQ,UACjB+N,UAAWvO,EAAMD,cAAcF,gBAAkB,KAWXmN,GAAzBC,CAAyCmQ,IC5LlDU,G,kLAMF3U,KAAKC,MAAM2U,mB,+BAIX,OAAI5U,KAAKC,MAAM5I,UAAUL,eAChB,kBAAC,GAAD,MAIP,kBAAC,IAAD,CAAe6d,SAAU5b,mBACvB,yBAAKsD,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuY,OAAK,EAAC7Z,KAAK,UAAU8Z,UAAWd,KAEvC,kBAAC,IAAD,CAAOhZ,KAAK,gCAAgC8Z,UAAWtM,KACvD,kBAAC,IAAD,CAAOxN,KAAK,sBAAsB8Z,UAAWhO,KAC7C,kBAAC,IAAD,CAAO9L,KAAK,mBAAmB8Z,UAAWC,KAC1C,kBAAC,IAAD,CAAO/Z,KAAK,oBAAoB8Z,UAAWE,KAC3C,kBAAC,IAAD,CAAOha,KAAK,UAAU8Z,UAAWG,KAEjC,kBAAC,IAAD,CAAOja,KAAK,4BAA4B8Z,UAAWzF,KACnD,kBAAC,IAAD,CAAOrU,KAAK,kBAAkB8Z,UAAW9F,KACzC,kBAAC,IAAD,CAAOhU,KAAK,gBAAgB8Z,UAAWI,KACvC,kBAAC,IAAD,CAAOla,KAAK,MAAM8Z,UAAWK,KAE7B,kBAAC,IAAD,CAAOna,KAAK,sBAAsB8Z,UAAWxC,KAE7C,kBAAC,IAAD,CAAOuC,OAAK,EAAC7Z,KAAK,IAAI8Z,UAAWvR,Y,GAnC3BhH,aA+CHsH,gBAJS,SAACjN,GAAD,MAAY,CAClCQ,UAAWR,EAAMQ,aAGqB,CAAEud,exDpBZ,iBAAO,CACnC7d,KAAMP,EACNc,QAAS,CACPmC,IAAK,iBACLC,UAAW,SAACrC,GAAD,MAAe,CACxB+E,GAAkB/E,SwDeTyM,CAA6C6Q,IC7DxCU,QACW,cAA7BnV,OAAO1B,SAAS8W,UAEe,UAA7BpV,OAAO1B,SAAS8W,UAEhBpV,OAAO1B,SAAS8W,SAASpQ,MACvB,2DCVNqQ,IAASC,OACP,kBAAC,IAAD,CAAUhb,MAAQA,GAChB,kBAAC,GAAD,OAEFib,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7b,MAAK,SAAA8b,GACjCA,EAAaC,iB","file":"static/js/main.f4455f06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/astronaut.4440e9a9.svg\";","export const API_REQUEST = 'API_REQUEST';\nexport const API_FINISH = 'API_FINISH';\nexport const API_ERROR = 'API_ERROR';\n\nexport const GET_API_CONFIG = 'GET_API_CONFIG';\n\nexport const GET_MOVIES_POPULAR = 'GET_MOVIES_POPULAR';\nexport const GET_MOVIES_NOW_PLAYING = 'GET_MOVIES_NOW_PLAYING';\nexport const GET_MOVIES_UPCOMING = 'GET_MOVIES_UPCOMING';\nexport const GET_MOVIES_DETAILS = 'GET_MOVIES_DETAILS';\nexport const GET_MOVIES_DISCOVER = 'GET_MOVIES_DISCOVER';\nexport const GET_MOVIES_DISCOVER_TOP = 'GET_MOVIES_DISCOVER_TOP';\nexport const GET_MOVIES_DISCOVER_UPCOMING = 'GET_MOVIES_DISCOVER_UPCOMING';\n\nexport const GET_TV_POPULAR = 'GET_TV_POPULAR';\nexport const GET_TV_DETAILS = 'GET_TV_DETAILS';\nexport const GET_TV_DISCOVER = 'GET_TV_DISCOVER';\nexport const GET_TV_DISCOVER_TOP = 'GET_TV_DISCOVER_TOP';\n\nexport const GET_PERSON_DETAILS = 'GET_PERSON_DETAILS';\n\nexport const GET_SEARCH_PERSON = 'GET_SEARCH_PERSON';\nexport const GET_SEARCH_MOVIES = 'GET_SEARCH_MOVIES';\nexport const GET_SEARCH_TV = 'GET_SEARCH_TV';\nexport const SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\n\nexport const CLEAR_STORE_STATE = 'CLEAR_STORE_STATE'","import { \n  API_REQUEST, \n  API_FINISH, \n  API_ERROR,\n} from '../constants';\n\n// TODO\nconst initialState = {\n  pendingRequests: 0,\n  lastSelectedFilters: {}\n}; \n\nconst userInterface = (state = initialState, action) => {\n  switch(action.type) {\n    case API_REQUEST:\n      return {\n        ...state,\n        pendingRequests: state.pendingRequests + 1\n      };\n    case API_FINISH:\n      return {\n        ...state,\n        pendingRequests: state.pendingRequests - 1\n      };\n    case API_ERROR:\n      return {\n        ...state,\n        pendingRequests: state.pendingRequests - 1\n        // TODO: Error handling\n      };\n    default:\n      return state;\n  }\n}\n\nexport default userInterface;\n","import { GET_API_CONFIG } from '../constants';\n\nconst initialState = {\n  isInitializing: true,\n  imageConfig: { \n    availableSizes: {},\n    baseUrl: null\n  },\n  genres: {}\n};\n\nconst apiConfig = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_API_CONFIG:\n      return {\n        ...state,\n        ...action.payload,\n        isInitializing: false\n      };\n    default:\n      return state;\n  }\n}\n\nexport default apiConfig;\n","import { GET_MOVIES_POPULAR } from '../../constants';\n\nconst initialState = {\n  isLoaded: false\n};\n\nconst moviesPopular = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES_POPULAR:\n      return {\n        ...state,\n        ...action.payload,\n        isLoaded: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default moviesPopular;\n","import { GET_MOVIES_NOW_PLAYING } from '../../constants';\n\nconst initialState = {\n  results: []\n};\n\nconst moviesNowPlaying = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES_NOW_PLAYING:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default moviesNowPlaying;\n","import { GET_MOVIES_UPCOMING } from '../../constants';\n\nconst initialState = {\n  isLoaded: false\n};\n\nconst moviesUpcoming = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES_UPCOMING:\n      return {\n        ...state,\n        ...action.payload,\n        isLoaded: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default moviesUpcoming;\n","import { \n  GET_MOVIES_DETAILS, \n} from '../../constants';\n\nconst initialState = {\n  isLoaded: false\n};\n\nconst moviesDetails = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES_DETAILS:\n      return {\n        ...state,\n        ...action.payload,\n        isLoaded: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default moviesDetails;\n","import { \n  GET_MOVIES_DISCOVER,\n  GET_MOVIES_DISCOVER_TOP,\n  GET_MOVIES_DISCOVER_UPCOMING,\n  CLEAR_STORE_STATE\n} from '../../constants';\n\nconst initialState = {\n  isLoaded: false,\n  query: null\n};\n\nexport const moviesDiscover = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES_DISCOVER:\n      return {\n        ...state,\n        ...action.payload,\n        query: action.query,\n        isLoaded: true\n      };\n    case CLEAR_STORE_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const moviesDiscoverTop = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES_DISCOVER_TOP:\n      return {\n        ...state,\n        ...action.payload,\n        query: action.query,\n        isLoaded: true\n      };\n    case CLEAR_STORE_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const moviesDiscoverUpcoming = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES_DISCOVER_UPCOMING:\n      return {\n        ...state,\n        ...action.payload,\n        query: action.query,\n        isLoaded: true\n      };\n    case CLEAR_STORE_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}","import { GET_TV_POPULAR } from '../../constants';\n\nconst initialState = {\n  isLoaded: false\n};\n\nconst tvPopular = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_TV_POPULAR:\n      return {\n        ...state,\n        ...action.payload,\n        isLoaded: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default tvPopular;\n","import { \n  GET_TV_DETAILS, \n} from '../../constants';\n\nconst initialState = {\n  isLoaded: false\n};\n\nconst tvDetails = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_TV_DETAILS:\n      return {\n        ...state,\n        ...action.payload,\n        isLoaded: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default tvDetails;\n","import {\n  GET_TV_DISCOVER,\n  GET_TV_DISCOVER_TOP,\n  CLEAR_STORE_STATE\n} from '../../constants';\n\nconst initialState = {\n  isLoaded: false,\n  query: null\n};\n\nexport const tvDiscover = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TV_DISCOVER:\n      return {\n        ...state,\n        ...action.payload,\n        query: action.query,\n        isLoaded: true\n      };\n    case CLEAR_STORE_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const tvDiscoverTop = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TV_DISCOVER_TOP:\n      return {\n        ...state,\n        ...action.payload,\n        query: action.query,\n        isLoaded: true\n      };\n    case CLEAR_STORE_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { \n  GET_PERSON_DETAILS, \n} from '../constants';\n\nconst initialState = {\n  isLoaded: false\n};\n\nconst personDetails = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_PERSON_DETAILS:\n      return {\n        ...state,\n        ...action.payload,\n        isLoaded: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default personDetails;\n","import { \n  GET_SEARCH_PERSON,\n  GET_SEARCH_MOVIES,\n  GET_SEARCH_TV,\n  SET_SEARCH_QUERY,\n  CLEAR_STORE_STATE\n} from '../constants';\n\nconst initialState = {\n  isLoaded: false,\n  movie: undefined,\n  person: undefined,\n  tv: undefined,\n  userQuery: undefined\n};\n\nconst search = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_SEARCH_PERSON:\n      return {\n        ...state,\n        person: action.payload,\n        isLoaded: true\n      };\n    case GET_SEARCH_MOVIES:\n      return {\n        ...state,\n        movie: action.payload,\n        isLoaded: true\n      }\n    case GET_SEARCH_TV:\n      return {\n        ...state,\n        tv: action.payload,\n        isLoaded: true\n      }\n    case SET_SEARCH_QUERY:\n      return {\n        ...state,\n        userQuery: action.payload\n      }\n    case CLEAR_STORE_STATE:\n      return initialState\n    default:\n      return state;\n  }\n}\n\nexport default search;\n","import { combineReducers } from 'redux';\nimport userInterface from './userInterface';\nimport apiConfig from './apiConfig';\nimport moviesPopular from './movies/popular';\nimport moviesNowPlaying from './movies/nowPlaying';\nimport moviesUpcoming from './movies/upcoming';\nimport moviesDetails from './movies/details';\nimport { \n  moviesDiscover, \n  moviesDiscoverTop,\n  moviesDiscoverUpcoming\n} from './movies/discover';\nimport tvPopular from './tv/popular';\nimport tvDetails from './tv/details';\nimport { \n  tvDiscover,\n  tvDiscoverTop\n} from './tv/discover';\nimport personDetails from './personDetails';\nimport search from './search';\n\nexport default combineReducers({\n  userInterface,\n  apiConfig,\n  moviesPopular,\n  moviesNowPlaying,\n  moviesUpcoming,\n  moviesDetails,\n  moviesDiscover,\n  moviesDiscoverTop,\n  moviesDiscoverUpcoming,\n  tvPopular,\n  tvDetails,\n  tvDiscover,\n  tvDiscoverTop,\n  personDetails,\n  search\n});","import axios from 'axios';\nimport { API_REQUEST, API_FINISH, API_ERROR } from '../constants';\n\nconst axiosClient = axios.create(\n  { \n    baseURL: process.env.REACT_APP_TMDB_API_URL,\n    params: {\n      api_key: process.env.REACT_APP_TMDB_API_KEY,\n      language: 'en-GB'\n    }\n  }\n);\n\nconst apiFinish = () => ({ type: API_FINISH });\nconst apiError = () => ({ type: API_ERROR });\n\nexport const apiMiddleware = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type !== API_REQUEST) {\n    return;\n  }\n\n  const { url, onSuccess, method = 'GET', data = {} } = action.payload;\n  const dataProperty = ['GET', 'DELETE'].includes(method) ? 'params' : 'data';\n\n  axiosClient.request({ url, method, [dataProperty]: data })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n      dispatch(apiFinish());\n    })\n    .catch((error) => {\n      console.log(error)\n      dispatch(apiError());\n    }); // TODO\n\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { apiMiddleware } from './middleware/api';\nimport { actionArrayMiddleware } from './middleware/actionArray';\n\nconst initialState = {};\n\nconst middleware = [thunk, apiMiddleware, actionArrayMiddleware];\n\nconst store = createStore(\n  rootReducer, \n  initialState, \n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\nexport default store;","export const actionArrayMiddleware = ({ dispatch }) => next => action => {\n  if (Array.isArray(action)) {\n    action.forEach(dispatch);\n    return;\n  }\n\n  next(action);\n};","// Enum with available image proportions\nexport const PROPORTION = { \n  THUMBNAIL: 'THUMBNAIL',\n  BACKDROP: 'BACKDROP',\n  POSTER: 'POSTER',\n  PROFILE_THUMBNAIL: 'PROFILE_THUMBNAIL'\n};\n\nexport const getUrl = (size, base, path) => {\n  return `${base}${size}${path}`;\n}\n","import { API_REQUEST, GET_API_CONFIG } from '../constants';\nimport { PROPORTION } from '../helpers/image';\n\nconst parseImagesObject = (payload) => {\n  let { images } = payload;\n  \n  // languages = Object.fromEntries(\n  //   languages.map((item) => [item.iso_639_1, item.english_name])\n  // );\n\n  const availableSizes = {\n    [PROPORTION.PROFILE_THUMBNAIL]: images.poster_sizes[0],\n    [PROPORTION.THUMBNAIL]: images.poster_sizes[1],\n    [PROPORTION.POSTER]: images.poster_sizes[3],\n    [PROPORTION.BACKDROP]: images.backdrop_sizes[2]\n  }\n  \n  const baseUrl = images.secure_base_url;\n\n  return { imageConfig: { availableSizes, baseUrl } };\n};\n\nconst parseGenres = (payload) => (\n  Object.fromEntries(\n    payload.map((item) => [item.id, item.name])\n  )\n);\n\nconst parseGenresForms = (payload) => {\n  let parsedObject = {};\n\n  payload.forEach(({ id, name }) => (\n    parsedObject[name.toLowerCase()] = {\n      type: 'with_genres',\n      value: id,\n      label: name\n    }\n  ));\n\n  return parsedObject;\n}\n\nconst saveApiConfig = (apiConfig, genres) => {\n  return {\n    type: GET_API_CONFIG,\n    payload: { \n      ...parseImagesObject(apiConfig), \n      genres: parseGenres(genres),\n      genresForms: parseGenresForms(genres)\n    }\n  }\n}\n\nexport const fetchApiConfig = () => ({\n  type: API_REQUEST,\n  payload: {\n    url: '/configuration',\n    onSuccess: (apiConfig) => [\n      fetchGenresConfig(apiConfig)\n    ],\n    // FIXME #1: TMDB Removed append_to_response usage on /configuration endpoint\n    // data: {\n    //   append_to_response: 'languages'\n    // }\n  }\n});\n\nconst fetchGenresConfig = (apiConfig) => ({\n  type: API_REQUEST,\n  payload: {  \n    url: '/genre/movie/list',\n    onSuccess: (genresConfig) => [\n      saveApiConfig(apiConfig, genresConfig.genres)\n    ]\n  }\n})","import React, { Component } from 'react'\nimport './SplashScreen.scss';\n\nexport default class SplashScreen extends Component {\n  render() {\n    return (\n      <div className=\"splash-screen\">\n        <div className=\"loader-solar\">\n          <div className=\"orbit orbit-first\">\n            <div className=\"planet\" />\n            <div className=\"orbit orbit-second\">\n              <div className=\"planet\" />\n              <div className=\"orbit orbit-third\">\n                <div className=\"planet\" />\n                <div className=\"planet-main\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <p>Loading...</p>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\nimport SideNav from 'react-simple-sidenav';\nimport { Link } from 'react-router-dom';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { IoMdClose } from 'react-icons/io';\nimport './Sidebar.scss';\n\nconst Sidebar = ({ searchIcon, showSearchBar, setShowSearchBar }) => {\n  const [showSidebar, setSidebar] = useState();\n\n  const sidebarItems = [\n    <div className=\"category-main home\" onClick={() => setSidebar(false)}>\n      <h3 className=\"category-name\">\n        <Link to=\"/\">Home</Link>\n      </h3>\n    </div>,\n    <div className=\"category-main\" onClick={() => setSidebar(false)}>\n      <h3 className=\"category-name\">\n        <Link to=\"/movies\">Movies</Link>\n      </h3>\n      <ul className=\"category-list\">\n        <Link to=\"/movies\" className=\"category-item\">\n          <li>Popular</li>\n        </Link>\n        <Link to=\"/movies/upcoming\" className=\"category-item\">\n          <li>Upcoming</li>\n        </Link>\n        <Link to=\"/movies/top-rated\" className=\"category-item\">\n          <li>Top rated</li>\n        </Link>\n      </ul>\n    </div>,\n    <div className=\"category-main\" onClick={() => setSidebar(false)}>\n      <h3 className=\"category-name\">\n        <Link to=\"/tv\">Series</Link>\n      </h3>\n      <ul className=\"category-list\">\n        <Link to=\"/tv\" className=\"category-item\">\n          <li>Popular</li>\n        </Link>\n        <Link to=\"/tv/top-rated\" className=\"category-item\">\n          <li>Top rated</li>\n        </Link>\n      </ul>\n    </div>\n  ];\n\n  return (\n    <div className=\"sidebar\">\n      <div\n        onClick={() => (setShowSearchBar((prevState) => setShowSearchBar(!prevState)))}\n      >\n        {showSearchBar ? (\n          <li className=\"search-icon\">\n            <IoMdClose/>\n          </li>\n        ) : (\n          <>\n            {searchIcon()}\n          </>\n        )}\n      </div>\n      <div className=\"hamburger-icon\">\n        <GiHamburgerMenu onClick={() => setSidebar(true)}/>\n      </div>\n      <SideNav \n        showNav={showSidebar} \n        onHideNav={() => setSidebar(false)} \n        title={false}\n        items={sidebarItems}\n        titleStyle={{ backgroundColor: '#4CAF50' }}\n        itemStyle={{ backgroundColor: '#fff' }}\n        itemHoverStyle={{ backgroundColor: '#CDDC39' }}\n      />\n    </div>\n  )\n}\n\nexport default Sidebar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { IoMdClose } from 'react-icons/io';\nimport './SearchBar.scss';\n\nconst SearchBar = ({ showSearchBar, setShowSearchBar, searchAlwaysVisible }) => {\n  const history = useHistory();\n  const [searchValue, setSearchValue] = useState('');\n  const searchInputRef = useRef(null);\n\n  useEffect(() => {\n    if (!searchAlwaysVisible) {\n      searchInputRef.current.focus();\n    }\n\n    if (!showSearchBar && searchValue.length > 0) {\n      setSearchValue('');\n    }\n  }, [searchAlwaysVisible, showSearchBar, searchValue.length]);\n\n  useEffect(() => {\n    if (history.location.state) {\n      setSearchValue(history.location.state.query);\n    } \n  }, [history.location.state]);\n\n  const handleSearchInput = (event) => {\n    setSearchValue(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (searchValue === '') {\n      return;\n    }\n\n    searchInputRef.current.blur();\n\n    history.push({\n      pathname: '/search',\n      state: { query: searchValue }\n    })\n  }\n\n  return (\n    <section \n      className={`search-bar ${!showSearchBar ? 'hide' : ''}`}\n    >\n      <div className=\"search-bar-wrapper\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Search for your movie, tv serie or person...\"\n            value={searchValue}\n            onChange={handleSearchInput}\n            ref={searchInputRef}\n          />\n          <button \n            className={`search-bar-button`} \n            onClick={handleSubmit}\n          >\n            <span className=\"label\">Search</span>\n          </button>\n          {!searchAlwaysVisible && (\n            <span \n              className=\"search-close\"\n              onClick={() => (setShowSearchBar((prevState) => setShowSearchBar(!prevState)))}\n            >\n              <IoMdClose/>\n            </span>\n          )}\n        </form>\n      </div>\n    </section>\n  );\n};\n\nSearchBar.propTypes = {\n  showSearchBar: PropTypes.bool,\n  setShowSearchBar: PropTypes.func,\n  searchAlwaysVisible: PropTypes.bool\n};\n\nexport default SearchBar\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Popup from 'reactjs-popup';\nimport Sidebar from './Sidebar';\nimport SearchBar from './SearchBar';\nimport { IoIosSearch, IoLogoGithub } from 'react-icons/io';\nimport logo from '../../images/astronaut.svg';\nimport './Navbar.scss';\n\nconst Navbar = () => {\n  const history = useHistory();\n  const searchAlwaysVisible = history.location.pathname === '/search';\n  const [showSearchBar, setShowSearchBar] = useState(searchAlwaysVisible);\n\n  useEffect(() => {\n    setShowSearchBar(searchAlwaysVisible);\n  }, [searchAlwaysVisible]);\n\n  const searchIcon = () => {\n    return (\n      <li \n        className={`search-icon ${showSearchBar ? 'disabled' : ''}`}\n        onClick={() => (setShowSearchBar((prevState) => setShowSearchBar(!prevState)))}\n      >\n        <IoIosSearch/>\n      </li>\n    );\n  }\n\n  return (\n    <header className=\"navbar-wrapper\">\n      <div className=\"navbar\" id=\"main-nav\">\n        <div className=\"navbar-left\">\n          <Link to=\"/\" className=\"navbar-brands slide-left\">\n            <img className=\"navbar-logo\" src={logo} alt=\"Astronaut\" />\n            <div className=\"navbar-name\">TMEX</div>\n          </Link>\n        </div>\n        <Sidebar\n          searchIcon={searchIcon}\n          showSearchBar={showSearchBar}\n          setShowSearchBar={setShowSearchBar}\n        />\n        <div className=\"github-code\">\n          <a href=\"https://github.com/paldave/movie-explorer\">\n            <span>View code</span>\n            <span><IoLogoGithub/></span>\n          </a>\n        </div>\n        <div className=\"navbar-right\">\n          <ul> \n            <Popup\n              trigger={<li className=\"navbar-item\">Movies</li>}\n              position=\"bottom center\"\n              on=\"hover\"\n              closeOnDocumentClick\n              arrow={false}\n            >\n              <div className=\"popup-menu\">\n                <Link to=\"/movies\" className=\"item\">\n                  <span>Popular</span>\n                </Link>\n                <Link to=\"/movies/upcoming\" className=\"item\">\n                  <span>Upcoming</span>\n                </Link>\n                <Link to=\"/movies/top-rated\" className=\"item\">\n                  <span>Top rated</span>\n                </Link>\n              </div>\n            </Popup>\n            <Popup\n              trigger={<li className=\"navbar-item\">Series</li>}\n              position=\"bottom center\"\n              on=\"hover\"\n              closeOnDocumentClick\n              arrow={false}\n            >\n              <div className=\"popup-menu\">\n                <Link to=\"/tv\" className=\"item\">\n                  <span>Popular</span>\n                </Link>\n                <Link to=\"/tv/top-rated\" className=\"item\">\n                  <span>Top rated</span>\n                </Link>\n              </div>\n            </Popup>\n            {!searchAlwaysVisible && (\n              <>\n                {searchIcon()}\n              </>\n            )}\n          </ul>          \n        </div>\n      </div>\n      <SearchBar \n        showSearchBar={showSearchBar}\n        setShowSearchBar={setShowSearchBar}\n        searchAlwaysVisible={searchAlwaysVisible}\n      />\n    </header>\n  );\n}\n\nexport default Navbar;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n\nexport const isOverflown = ({ clientWidth, clientHeight, scrollWidth, scrollHeight }) => {\n  return scrollHeight > clientHeight || scrollWidth > clientWidth;\n}","import { API_REQUEST, GET_MOVIES_POPULAR } from '../../constants';\n\nconst saveMoviesPopular = (payload) => ({\n  type: GET_MOVIES_POPULAR,\n  payload\n});\n\nexport const fetchMoviesPopular = () => ({\n  type: API_REQUEST,\n  payload: {\n    url: '/movie/popular',\n    onSuccess: saveMoviesPopular\n  }\n});","import { API_REQUEST, GET_MOVIES_UPCOMING } from '../../constants';\n\nconst saveMoviesUpcoming = (payload) => ({\n  type: GET_MOVIES_UPCOMING,\n  payload\n});\n\nexport const fetchMoviesUpcoming = () => ({\n  type: API_REQUEST,\n  payload: {\n    url: '/movie/upcoming',\n    onSuccess: saveMoviesUpcoming\n  }\n});","import { API_REQUEST, GET_TV_POPULAR } from '../../constants';\n\nconst saveTvPopular = (payload) => ({\n  type: GET_TV_POPULAR,\n  payload\n});\n\nexport const fetchTvPopular = () => ({\n  type: API_REQUEST,\n  payload: {\n    url: '/tv/popular',\n    onSuccess: saveTvPopular\n  }\n});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PROPORTION, getUrl } from '../helpers/image';\nimport './Backdrop.scss';\n\nexport default class Backdrop extends Component {\n  static propTypes = {\n    backdropPath: PropTypes.string,\n    imageConfig: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.SIZE = PROPORTION.BACKDROP;\n  }\n\n  render() {\n    const { backdropPath, imageConfig } = this.props;\n    const size = imageConfig.availableSizes[this.SIZE];\n    const imageUrl = getUrl(size, imageConfig.baseUrl, backdropPath);\n\n    const imageStyle = { \n      backgroundPosition: 'center 0px',\n      backgroundImage: `url(${imageUrl})`\n    }\n    \n    return (\n      <div className={`backdrop-container ${!backdropPath ? 'no-background' : ''}`}>\n        <div className=\"backdrop-wrapper\">\n          <div style={imageStyle} className=\"backdrop-image\"/>\n          <div className=\"backdrop-blur\"/>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './SectionHeader.scss';\n\nconst SectionHeader = ({ title, linkName, linkTo }) => {\n  return (\n    <div className=\"section-header\">\n      <span className=\"title\">{title}</span>\n      { linkTo && (\n        <Link to={linkTo}>\n          <span className=\"link-name\">{linkName}</span>\n        </Link>\n      )}\n    </div>\n  )\n}\n\nSectionHeader.propTypes = { \n  title: PropTypes.string.isRequired,\n  linkName: PropTypes.string,\n  linkTo: PropTypes.string\n};\n\nexport default SectionHeader;\n","import React from 'react';\nimport { FaRegImage } from 'react-icons/fa';\nimport './ImageUnavailable.scss';\n\nconst ImageUnavailable = () => {\n  return (\n    <div className=\"no-image\">\n      <FaRegImage/>\n    </div>\n  )\n}\n\nexport default ImageUnavailable","export const getYear = (date) => new Date(date).getFullYear();\nexport const getGenresString = (genres) => genres.map((genre) => genre.name).join(', ');\nexport const getDirector = (members) => { \n  if (members['Directing']) {\n    return members['Directing'].find((member) => member.job === 'Director') || { name: '-' };\n  } else {\n    return { name: '-' }\n  }\n}\nexport const getCurrency = (value) => {\n  if (value === 0) {\n    return '-';\n  };\n\n  return new Intl.NumberFormat('en-US', \n    { style: 'currency', currency: 'USD' }\n  ).format(value);\n};","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ImageUnavailable from '../layout/ImageUnavailable';\nimport { PROPORTION, getUrl } from '../../helpers/image';\nimport { getYear } from '../../helpers/movie';\nimport { FaStar } from 'react-icons/fa';\nimport './ItemThumb.scss';\n\nexport default class ItemThumb extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    apiConfig: PropTypes.object.isRequired,\n    itemType: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    showMeta: true\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.SIZE = PROPORTION.THUMBNAIL;\n  }\n\n  renderImage(imageConfig, path) {\n    if (!path) {\n      return <ImageUnavailable/>;\n    }\n\n    const size = imageConfig.availableSizes[this.SIZE];\n    const url = getUrl(size, imageConfig.baseUrl, path);\n\n    return (\n      <img src={url} alt=\"\"/>\n    );\n  }\n\n  render() {\n    const { data, showMeta, itemType } = this.props;\n    const { imageConfig } = this.props.apiConfig;\n\n    return (\n      <div className=\"item-card item-card-thumb\">\n        <Link to={`/${itemType}/details/${data.id}`}>\n          <div className=\"card-top\">\n            {showMeta &&\n              <div className={`card-meta ${!data.poster_path ? 'show-title' : ''}`}>\n                <div className=\"card-meta-rating\">\n                  <span className=\"vote-number\">{data.vote_average}</span>\n                  <span><FaStar/></span>\n                </div>\n                <div className=\"card-meta-details\">\n                  <span>{data.title || data.name}</span>\n                  <br/>\n                  <span>{getYear(data.release_date || data.first_air_date) || '-'}</span>\n                </div>\n              </div>\n            }\n            {this.renderImage(imageConfig, data.poster_path)}\n          </div>\n        </Link>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ImageUnavailable from '../layout/ImageUnavailable';\nimport { PROPORTION, getUrl } from '../../helpers/image';\nimport './ItemThumb.scss';\nimport './ItemCast.scss';\n\nexport default class ItemCast extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    apiConfig: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    PROFILE_THUMBNAIL: false\n  }\n\n  renderImage(imageConfig, path) {\n    if (!path) {\n      return <ImageUnavailable/>;\n    }\n\n    const proportionType = \n      this.props.PROFILE_THUMBNAIL ?\n      PROPORTION.PROFILE_THUMBNAIL : \n      PROPORTION.THUMBNAIL; \n\n    const size = imageConfig.availableSizes[proportionType];\n    const url = getUrl(size, imageConfig.baseUrl, path);\n\n    return (\n      <img src={url} alt=\"\"/>\n    );\n  }\n\n  render() {\n    const { data, PROFILE_THUMBNAIL } = this.props;\n    const { imageConfig } = this.props.apiConfig;\n\n    return (\n      <div className={`item-card item-card-thumb item-card-cast ${PROFILE_THUMBNAIL ? 'extra-small' : ''}`}>\n        <Link to={`/person-details/${data.id}`}>\n          <div className=\"card-top\">\n            <div className=\"card-meta\"/>\n            {this.renderImage(imageConfig, data.profile_path)}\n            {!PROFILE_THUMBNAIL && (\n              <div className=\"card-meta-character\">\n                <span className=\"actor\">{data.name}</span> <br/>\n                <span className=\"white-med-color character-name\">{data.character}</span>\n              </div>\n            )}\n          </div>\n        </Link>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport './SimpleLoader.scss'\n\nconst SimpleLoader = () => {\n  return (\n    <div className=\"ring-spinner\"/>\n  )\n}\n\nexport default SimpleLoader;\n","export const ITEM_TYPE = {\n  MOVIES: 'movies',\n  TV: 'tv',\n  CAST: 'cast'\n} ;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ItemThumb from './ItemThumb';\nimport ItemCast from './ItemCast';\nimport SimpleLoader from '../layout/SimpleLoader';\nimport { ITEM_TYPE } from '../../helpers/itemType';\nimport { IoIosArrowDropright } from 'react-icons/io';\nimport './ItemList.scss';\n\nexport default class ItemList extends Component {\n  static propTypes = {\n    data: PropTypes.array,\n    apiConfig: PropTypes.object.isRequired,\n    viewMore: PropTypes.bool,\n    viewMoreLink: PropTypes.string\n  }\n\n  static defaultProps = {\n    viewMore: true,\n    itemsPerRow: 12\n  }\n\n  renderThumbnail(item, apiConfig) {\n    const { media_type, episode_count, first_air_date, release_date } = item;\n    \n    let itemType;\n    if (media_type === ITEM_TYPE.TV || episode_count || first_air_date) {\n      itemType = ITEM_TYPE.TV;\n    } else if (media_type === ITEM_TYPE.MOVIES || release_date) {\n      itemType = ITEM_TYPE.MOVIES;\n    } else {\n      itemType = ITEM_TYPE.CAST;\n    }\n\n    if (itemType === ITEM_TYPE.CAST) {\n      return (\n        <ItemCast\n          data={item}\n          apiConfig={apiConfig}\n        />\n      )\n    }\n\n    return (\n      <ItemThumb \n        data={item} \n        apiConfig={apiConfig}\n        itemType={itemType}\n      /> \n    );\n  }\n\n  renderViewMore() {\n    if (\n      !this.props.data || \n      !this.props.viewMore ||\n      this.props.data.length < this.props.itemsPerRow\n    ) {\n      return null;\n    }\n\n    return (\n      <span className=\"load-more\">\n        <Link to={this.props.viewMoreLink}>\n          <IoIosArrowDropright/>\n          <br/>\n          View more\n        </Link>\n      </span>\n    );\n  }\n\n  render() {\n    const { data, apiConfig, itemsPerRow } = this.props;\n    \n    if (!data) {\n      return (<SimpleLoader/>);\n    }\n\n    if (data.length === 0) {\n      return (\n        <p className=\"no-available\">There are no available items.</p>\n      )  \n    }\n\n    return (\n      <div className=\"item-list\">\n        <ul className=\"item-list-content\">\n          {data.slice(0, itemsPerRow).map((item) => (\n            <li className=\"item-list-content-item\" key={item.id}>\n              {this.renderThumbnail(item, apiConfig)}\n            </li>\n          ))}\n          {this.renderViewMore()}\n        </ul>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchMoviesPopular } from '../actions/movies/popular';\nimport { fetchMoviesUpcoming } from '../actions/movies/upcoming';\nimport { fetchTvPopular } from '../actions/tv/popular';\nimport Backdrop from '../components/Backdrop';\nimport SectionHeader from '../components/SectionHeader';\nimport ItemList from '../components/cards/ItemList';\nimport './Home.scss';\n\nclass Home extends Component {\n  static propTypes = {\n    fetchMoviesPopular: PropTypes.func.isRequired,\n  }\n\n  componentDidMount() {\n    if (!this.props.moviesPopular.isLoaded) {\n      this.props.fetchMoviesPopular();\n    }\n\n    if (!this.props.moviesUpcoming.isLoaded) {\n      this.props.fetchMoviesUpcoming();\n    }\n\n    if (!this.props.tvPopular.isLoaded) {\n      this.props.fetchTvPopular();\n    }\n  }\n\n  render() {\n    const { apiConfig, moviesPopular, moviesUpcoming, tvPopular } = this.props;\n    \n    // TODO: Spinner\n    // Depend on GET moviesPopular to show Backdrop\n    if (\n      !moviesPopular.results ||\n      !moviesUpcoming.results ||\n      !tvPopular.results\n    ) {\n      return <div />\n    }\n\n    return (\n      <div className=\"home-container\">\n        <Backdrop\n          backdropPath={moviesPopular.results[0].backdrop_path}\n          imageConfig={apiConfig.imageConfig}\n        />\n        <div className=\"body-container\">\n          <div className=\"body-wrapper\">\n            <div className=\"home-welcome\">\n              <h1>Space is for everybody. Just like movies. <br/> Explore and share what you like. </h1>\n            </div>\n            <section id=\"movies-popular\">\n              <SectionHeader\n                title='Popular movies'\n                linkName='View more'\n                linkTo='/movies'\n              />\n              <ItemList\n                data={moviesPopular.results}\n                apiConfig={apiConfig}\n                viewMoreLink='/movies'\n              />\n            </section>\n            <section id=\"tv-upcoming\">\n              <SectionHeader\n                title='Popular Series'\n                linkName='View more'\n                linkTo='/tv'\n              />\n              <ItemList\n                data={tvPopular.results}\n                apiConfig={apiConfig}\n                viewMoreLink='/tv'\n              />\n            </section>\n            <section id=\"movies-upcoming\">\n              <SectionHeader\n                title='Upcoming movies'\n                linkName='View more'\n                linkTo='/movies/upcoming'\n              />\n              <ItemList\n                data={moviesUpcoming.results}\n                apiConfig={apiConfig}\n                viewMoreLink='/movies/upcoming'\n              />\n            </section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  apiConfig: state.apiConfig,\n  moviesPopular: state.moviesPopular,\n  moviesUpcoming: state.moviesUpcoming,\n  tvPopular: state.tvPopular\n});\n\nconst actionCreators = {\n  fetchMoviesPopular,\n  fetchMoviesUpcoming,\n  fetchTvPopular\n};\n\nexport default connect(mapStateToProps, actionCreators)(Home);\n","export const parseVideos = (videos) => {\n  let parsedVideos = [];\n\n  videos.forEach((video) => {\n    if (video.site !== 'YouTube') {\n      return;\n    }\n    \n    video.url = `https://www.youtube.com/watch?v=${video.key}`;\n\n    if (video.type === 'Trailer') {\n      parsedVideos.unshift(video);\n    }\n\n    if (video.type === 'Teaser') {\n      parsedVideos.push(video);\n    }\n  });\n  \n  return parsedVideos;\n}","export const parseCrew = (crew) => {\n  let parsedData = {};\n  \n  crew.forEach((member) => {\n    const { department } = member;\n    \n    if (!parsedData.hasOwnProperty(department)) {\n      parsedData[department] = [];\n    }\n\n    parsedData[department].push(member);\n  });\n  \n  return parsedData;\n}\n","import { parseVideos } from '../../helpers/parseVideos';\nimport { parseCrew } from '../../helpers/parseCrew';\nimport { \n  API_REQUEST, \n  GET_MOVIES_DETAILS,\n} from '../../constants';\n\nconst saveMoviesDetails = (payload) => {\n  payload.videos = parseVideos(payload.videos.results);\n  payload.credits.crew = parseCrew(payload.credits.crew);\n  \n  return {\n    type: GET_MOVIES_DETAILS,\n    payload\n  }\n};\n\nexport const fetchMoviesDetails = (id) => ({\n  type: API_REQUEST,\n  payload: {\n    url: `/movie/${id}`,\n    onSuccess: saveMoviesDetails,\n    data: {\n      append_to_response: 'credits,videos,reviews,recommendations'\n    }\n  }\n});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport SplashScreen from '../../components/layout/SplashScreen';\nimport './Base.scss';\n\nexport default (WrappedContainer, fetchData) => {\n  class BaseHoc extends Component {\n    static propTypes = {\n      WrappedContainer: PropTypes.element,\n      fetchData: PropTypes.func\n    }\n\n    componentDidMount() {\n      const id = this.props.match.params.id;\n\n      if (this.props.data.id !== Number(id)) {\n        this.props.fetchData(id);\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      const [ newId, prevId ] = [ this.props.match.params.id, prevProps.match.params.id ];\n  \n      if (newId !== prevId) {\n        this.props.fetchData(this.props.match.params.id);\n      }\n    } \n\n    render() {\n      if (!this.props.data.isLoaded || this.props.isLoading) {\n        return (<SplashScreen/>);\n      }\n      \n      return (\n        <WrappedContainer {...this.props} />\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    apiConfig: state.apiConfig,\n    isLoading: state.userInterface.pendingRequests > 0\n  });\n  \n  return connect(mapStateToProps, { fetchData })(BaseHoc);\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageUnavailable from './layout/ImageUnavailable';\nimport { PROPORTION, getUrl } from '../helpers/image';\n\nexport default class DetailsImage extends Component {\n  static propTypes = {\n    imagePath: PropTypes.string,\n    imageConfig: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.SIZE = PROPORTION.POSTER;\n  }\n\n  render() {\n    const { imagePath, imageConfig } = this.props;\n\n    if (!imagePath) {\n      return <ImageUnavailable/>;\n    }\n\n    const size = imageConfig.availableSizes[this.SIZE];\n    const imageUrl = getUrl(size, imageConfig.baseUrl, imagePath);\n    \n    return (\n      <img src={imageUrl} className=\"details-image\" alt=\"\"/>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport ShowMoreText from 'react-show-more-text';\nimport './ReviewItem.scss';\n\nexport default class ReviewItem extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  }\n\n  renderExtend(label) {\n    return (\n      <span className=\"extend\">{label}</span>\n    )\n  }\n\n  render() {\n    const { data } = this.props;\n\n    return (\n      <div className=\"review-item\">\n        <section className=\"author\">\n          <span className=\"white-med-color\">Review by</span> {data.author}\n        </section>\n        <section className=\"content\">\n          <ShowMoreText\n            lines={5}\n            more={this.renderExtend('Show more')}\n            less={false}\n            expanded={false}\n          >\n            {data.content}\n          </ShowMoreText>\n        </section>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReviewItem from './ReviewItem';\nimport './ReviewList.scss';\n\nexport default class ItemList extends Component {\n  static propTypes = {\n    data: PropTypes.array,\n  }\n\n  render() {\n    const { data } = this.props;\n\n    if (data.length === 0) {\n      return (\n        <div className=\"review-list\">\n          <p className=\"no-review\">There are no available reviews.</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"review-list\">\n        <ul className=\"review-list-content\">\n          {data.map((item) => (\n            <li className=\"review-list-content-item\" key={item.id}>\n              <ReviewItem data={item}/>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './Button.scss';\n\nconst Button = (props) => {\n  return (\n    <button type=\"button\" \n      className={`button ${props.disabled ? 'disabled' : ''}`} \n      id={props.id} \n      onClick={props.onClick} \n      disabled={props.disabled}\n    >\n      <span className=\"label\" >{props.label}</span>\n      <div className=\"border\"/>\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport Button from '../layout/Button';\nimport ReactPlayer from 'react-player'\nimport './Player.scss';\n\nconst Player = ({ data, showPlayer, isOpen }) => {\n  return (\n    <Modal \n      isOpen={isOpen}\n      onRequestClose={showPlayer}\n      ariaHideApp={false}\n      className=\"modal-player\"\n      overlayClassName=\"modal-overlay\"\n    >\n      <Button \n        onClick={showPlayer}\n        label=\"x\"\n      />\n      <ReactPlayer\n        className=\"react-player\"\n        url={data.url}\n        playing\n        controls\n        volume={1}\n      />\n    </Modal>\n  )\n}\n\nPlayer.propTypes = {\n  data: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  showPlayer: PropTypes.func.isRequired\n}\n\nexport default Player","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaStar } from 'react-icons/fa';\nimport Button from '../layout/Button';\nimport Player from '../modals/Player';\nimport './ActionBar.scss';\n\nexport default class ActionBar extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  }\n\n  state = {\n    playerActive: false,\n  }\n\n  showPlayer = () => (\n    this.setState((state) => ({\n      playerActive: !state.playerActive\n    }))\n  )\n\n  renderTrailer() {\n    const { videos } = this.props.data;\n\n    if (videos.length === 0) {\n      return (\n        <p className=\"trailer\">\n          <Button label=\"Trailer unavailable\" disabled={true}/>  \n        </p>\n      )\n    }\n\n    return (\n      <p className=\"trailer\">\n        <Button label=\"Play trailer\" onClick={this.showPlayer}/>\n        <Player \n          data={videos[0]} \n          isOpen={this.state.playerActive} \n          showPlayer={this.showPlayer} \n        />\n      </p>\n    );\n  }\n\n  render() {\n    const { data } = this.props;\n\n    return (\n      <section className=\"action-bar\">\n        <div className=\"rating\">\n          User rating: <span className=\"vote-number\">{data.vote_average || '-'}</span>\n          <span><FaStar/></span>\n        </div>\n        {this.renderTrailer()}\n      </section>\n    )\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Director = ({ data, label }) => {\n  return (\n    <p className=\"director\">\n      <span className=\"white-med-color\">{`${label} `}</span>\n      {data.length > 0 ? (\n        <>\n          {data.map((author) => (\n            <Link key={author.id} to={`/person-details/${author.id}`}>\n              <span className=\"name\">{author.name}</span>\n            </Link>\n          ))}\n        </>\n      ) : (\n        <Link key={data.id} to={`/person-details/${data.id}`}>\n          <span className=\"name\">{data.name}</span>\n        </Link>\n      )}\n    </p>\n  )\n}\n\nDirector.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  label: PropTypes.string\n}\n\nexport default Director;","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchMoviesDetails } from '../../actions/movies/details';\nimport BaseHoc from './BaseHoc';\nimport Backdrop from '../../components/Backdrop';\nimport DetailsImage from '../../components/DetailsImage';\nimport SectionHeader from '../../components/SectionHeader';\nimport ItemList from '../../components/cards/ItemList';\nimport ReviewList from '../../components/details/ReviewList';\nimport Button from '../../components/layout/Button';\nimport ActionBar from '../../components/details/ActionBar';\nimport Directors from '../../components/details/Director';\nimport { \n  getYear, \n  getDirector, \n  getCurrency \n} from '../../helpers/movie';\n\nclass MoviesDetails extends Component {\n  static propTypes = {\n    fetchMoviesDetails: PropTypes.func\n  }\n\n  renderSidebar() {\n    const { data, apiConfig } = this.props; \n    \n    return (\n      <section className=\"item-details-info\">\n        <div className=\"genres\">\n          <h4 className=\"header\">Genres</h4>\n          {data.genres.map((genre) => (\n            <Fragment key={genre.id}>\n              <Button label={genre.name}/>\n            </Fragment>\n          ))}\n        </div>\n        <div className=\"extras\">\n          <h4 className=\"header\">Additional info</h4>\n          <p>\n            Release date:\n            <br/>\n            {data.release_date}\n          </p>\n          <p></p>\n          {/* // FIXME #1: TMDB Removed append_to_response usage on /configuration endpoint */}\n          {/* <p>\n            Original language:\n            <br/>\n            {apiConfig.languages[data.original_language]}\n          </p> */}\n          <p>\n            Runtime:\n            <br/>\n            {data.runtime ? (\n              <>{data.runtime} min</>\n            ) : (\n              <>-</>\n            )}\n          </p>\n          <p>\n            Budget:\n            <br/>\n            {getCurrency(data.budget)}\n          </p>\n          <p>\n            Revenue:\n            <br/>\n            {getCurrency(data.revenue)}\n          </p>\n        </div>\n      </section>\n    );\n  }\n\n  render() {\n    const { apiConfig, data } = this.props;\n    \n    const linkToCast = `${this.props.location.pathname}/full-cast`;\n\n    return (\n      <div className=\"item-details-container\">\n        <Backdrop\n          backdropPath={data.backdrop_path}\n          imageConfig={apiConfig.imageConfig}\n        />\n        <div className=\"body-container\">\n          <div className=\"item-details-wrapper\">\n            <section className=\"poster\">\n              <DetailsImage \n                imagePath={data.poster_path}\n                imageConfig={apiConfig.imageConfig}\n              />\n            </section>\n            <section className=\"item-details-main\">\n              <section className=\"header\">\n                <span className=\"main-title\">\n                  {data.title} \n                  <br/>\n                  <span className=\"year white-med-color\">({getYear(data.release_date) || '-'})</span>\n                </span>\n                <br/>\n                <Directors data={getDirector(data.credits.crew)} label=\"Directed by\"/>\n              </section>\n              <ActionBar\n                data={data}\n              />\n              <section className=\"overview\">\n                {data.tagline &&\n                  <p className=\"tagline\">{data.tagline}</p>\n                }\n                <p>{data.overview}</p>\n              </section>\n            </section>\n            {this.renderSidebar()}\n            <section className=\"item-details-cast\">\n              {data.credits.cast.length === 0 && Object.keys(data.credits.crew).length === 0 ? (\n                <SectionHeader\n                  title='Cast'\n                />\n              ) : (\n                <SectionHeader\n                  title='Cast'\n                  linkName='View full Cast & Crew'\n                  linkTo={linkToCast}\n                />\n              )}\n              <ItemList\n                data={data.credits.cast}\n                apiConfig={apiConfig}\n                viewMoreLink={linkToCast}\n              />\n            </section>\n            <section className=\"item-details-reviews\">\n              <SectionHeader\n                title='Reviews'\n              />\n              <ReviewList\n                data={data.reviews.results.slice(0, 4)}\n              />\n            </section>\n            <section className=\"item-details-recommendations\">\n              <SectionHeader\n                title='Recommendations'\n              />\n              <ItemList\n                data={data.recommendations.results}\n                apiConfig={apiConfig}\n                viewMore={false}\n              />\n            </section>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.moviesDetails,\n});\n\nexport default connect(mapStateToProps, {})(BaseHoc(MoviesDetails, fetchMoviesDetails));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport ItemCast from './cards/ItemCast';\nimport './CastTable.scss';\n\nclass CastTable extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n    apiConfig: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    includePhotos: PropTypes.bool\n  }\n\n  goToPersonDetails(id) {\n    this.props.history.push(`/person-details/${id}`);\n  }\n\n  renderCastRow(item) {\n    return (\n      <>\n        <td className=\"item-details\">\n          <span className=\"primary\">{item.name}</span>\n          <br/>\n          <span className=\"white-med-color\"> as </span> \n          <br/>\n          {item.character || item.job}\n        </td>\n      </>\n    );\n  }\n\n  renderCrewRow(item) {\n    return (\n      <>\n        <td className=\"item-name\">\n          <span className=\"primary\">{item.name}</span>\n        </td>\n        <td className=\"item-details\">\n          <span className=\"white-med-color\"> as </span> \n          {item.character || item.job}\n        </td>\n      </>\n    );\n  }\n\n  render() {\n    const { data, name, includePhotos } = this.props;\n\n    return (\n      <table className={`table-main cast ${includePhotos ? 'include-photos' : ''}`}>\n        <caption className=\"name\">{`${name} (${data.length})`}</caption>\n        <tbody>\n          {data.map((item) => (\n            <tr \n              className=\"table-item\" \n              key={`${item.id}-${item.character || item.job}`}\n              onClick={() => this.goToPersonDetails(item.id)}\n            >\n              {includePhotos ? (\n                <>\n                  <td className=\"item-photo\">\n                    <ItemCast \n                      data={item} \n                      apiConfig={this.props.apiConfig}\n                      PROFILE_THUMBNAIL={true}\n                    />\n                  </td>\n                  {this.renderCastRow(item)}\n                </>\n              ) : (\n                <>\n                  {this.renderCrewRow(item)}\n                </>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nexport default withRouter(CastTable);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport SplashScreen from '../../../components/layout/SplashScreen';\nimport DetailsImage from '../../../components/DetailsImage';\nimport CastTable from '../../../components/CastTable';\nimport Button from '../../../components/layout/Button';\nimport { getYear } from '../../../helpers/movie';\nimport { IoMdArrowBack } from 'react-icons/io'; \nimport './CastBase.scss';\n\nexport default (WrappedContainer, fetchData) => {\n  class CastBase extends Component {\n    static propTypes = {\n      WrappedContainer: PropTypes.element,\n      fetchData: PropTypes.func\n    }\n\n    componentDidMount() {\n      if (!this.props.data.credits) {\n        const id = this.props.match.params.id;\n        this.props.fetchData(id);\n      }\n    }\n\n    goBackToDetails = () => {\n      this.props.history.goBack();\n    }\n\n    renderContent = () => {\n      const { data, apiConfig } = this.props;\n\n      const buttonLabel = ( \n        <>\n          <IoMdArrowBack/> <span>Go back to details</span> \n        </>\n      );\n\n      return (\n        <div className=\"body-container no-padding\">\n          <div className=\"full-cast-wrapper\">\n            <section className=\"main-header\">\n              <section className=\"poster\">\n                <DetailsImage \n                  imagePath={data.poster_path}\n                  imageConfig={apiConfig.imageConfig}\n                />\n              </section>\n              <section className=\"info\">\n                <span className=\"main-title\">\n                  {data.title || data.name} \n                  <br/>\n                  <span className=\"year white-med-color\">({getYear(data.release_date || data.first_air_date) || '-'})</span>\n                </span>\n                <p>\n                  <Button label={buttonLabel} onClick={this.goBackToDetails}/>\n                </p>\n              </section>\n            </section>\n            <section className=\"cast-tables\">\n              <CastTable \n                data={this.props.data.credits.cast}\n                apiConfig={this.props.apiConfig}\n                name='Cast'\n                includePhotos={true}\n              />\n            </section>\n            <section className=\"crew-tables\">\n              {Object.keys(data.credits.crew).map((department) => (\n                <CastTable\n                  key={department}\n                  data={data.credits.crew[department]}\n                  apiConfig={this.props.apiConfig}\n                  name={department}\n                />\n              ))}\n            </section>\n          </div>\n        </div>\n      );\n    }\n\n    render() {\n      if (!this.props.data.isLoaded || this.props.isLoading) {\n        return (<SplashScreen/>);\n      }\n\n      return (\n        <WrappedContainer \n          {...this.props} \n          renderContent={this.renderContent}\n          goBackToDetails={this.goBackToDetails}\n        />\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    apiConfig: state.apiConfig,\n    isLoading: state.userInterface.pendingRequests > 0\n  });\n  \n  return withRouter(connect(mapStateToProps, { fetchData })(CastBase));\n}","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchMoviesDetails } from '../../../actions/movies/details';\nimport CastBase from './CastBase';\n\nexport class MoviesCast extends Component {\n  static propTypes = {\n    fetchMoviesFullCast: PropTypes.func,\n    data: PropTypes.object.isRequired\n  }\n\n  render() {\n    return this.props.renderContent();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.moviesDetails\n});\n\nexport default connect(mapStateToProps, {})(CastBase(MoviesCast, fetchMoviesDetails));\n","import moment from 'moment';\n\nexport const getDatePlusMonth = (month) => (moment().add(month, 'months'));\nexport const getDatePlusMonthFormatted = (month) => (moment().add(month, 'months').format('YYYY-MM-DD'));\nexport const getDatePlusDayFormatted = (days) => (moment().add(days, 'days').format('YYYY-MM-DD'));\nexport const getDateFormatted = (date) => (moment(date).format('YYYY-MM-DD'));\nexport const isDate = (date) => (date instanceof Date);","import { \n  getDatePlusMonthFormatted, \n  getDatePlusDayFormatted \n} from './date';\n\nexport const SORT_BY = {\n  popularityDesc: { type: 'sort_by', value: 'popularity.desc', label: 'Popularity Descending' },\n  popularityAsc: { type: 'sort_by', value: 'popularity.asc', label: 'Popularity Ascending' },\n  ratingDesc: { type: 'sort_by', value: 'vote_average.desc', label: 'Rating Descending' },\n  ratingAsc: { type: 'sort_by', value: 'vote_average.asc', label: 'Rating Ascending' },\n  titleDesc: { type: 'sort_by', value: 'original_title.desc', label: 'Title Descending' },\n  titleAsc: { type: 'sort_by', value: 'original_title.asc', label: 'Title Ascending' },\n  releaseDateDesc: { type: 'sort_by', value: 'primary_release_date.desc', label: 'Release Date Descending' },\n  releaseDateAsc: { type: 'sort_by', value: 'primary_release_date.asc', label: 'Release Date Ascending' }\n}\n\nexport const RELEASE_DATE = {\n  greaterThan: { type: 'primary_release_date.gte', value: null, label: 'From: ' },\n  lessThan: { type: 'primary_release_date.lte', value: null, label: 'To: ' }\n}\n\nexport const defaultSearchQueryValues = () => ({\n  include_adult: false\n});\n\nexport const defaultQueryValues = () => ({\n  include_adult: false,\n  include_video: false,\n  'primary_release_date.lte': getDatePlusMonthFormatted(6)\n});\n\nexport const upcomingQueryValues = () => ({\n  ...defaultQueryValues(),\n  'primary_release_date.gte': getDatePlusDayFormatted(2),\n  'primary_release_date.lte': getDatePlusMonthFormatted(1)\n})\n\nexport const topRatedQueryValues = () => ({\n  ...defaultQueryValues(),\n  'vote_count.gte': 300\n})\n\nexport const parseQuery = (data) => {\n  let parsedQueryList = {};\n\n  Object.entries(data).forEach(([key, query]) => {\n    if (key === 'with_genres' && Array.isArray(query) && query.length === 0) {\n      delete parsedQueryList[key];\n      return;\n    }\n\n    if (Array.isArray(query)) {\n      return parsedQueryList[key] = query.map((element) => (\n        element.value\n      )).join(',')\n    }\n\n    if (key === 'page') {\n      return parsedQueryList[key] = query\n    }\n      \n    return parsedQueryList[key] = query.value;\n  });\n\n  return parsedQueryList;\n}","import { \n  API_REQUEST, \n  GET_MOVIES_DISCOVER, \n  GET_MOVIES_DISCOVER_TOP,\n  GET_MOVIES_DISCOVER_UPCOMING,\n  CLEAR_STORE_STATE \n} from '../../constants';\nimport { \n  parseQuery, \n  defaultQueryValues, \n  upcomingQueryValues,\n  topRatedQueryValues \n} from '../../helpers/query';\n\nconst saveMoviesDiscover = (payload, query) => {\n  return {\n    type: GET_MOVIES_DISCOVER,\n    payload,\n    query\n  }\n};\n\nconst saveMoviesDiscoverTop = (payload, query) => {\n  return {\n    type: GET_MOVIES_DISCOVER_TOP,\n    payload,\n    query\n  }\n};\n\nconst saveMoviesDiscoverUpcoming = (payload, query) => {\n  return {\n    type: GET_MOVIES_DISCOVER_UPCOMING,\n    payload,\n    query\n  }\n};\n\nexport const clearStoreState = () => ({\n  type: CLEAR_STORE_STATE\n});\n\nconst _fetchMoviesBase = (unparsedQuery, currentPage, baseQuery, saveCallback) => {\n  unparsedQuery.page = currentPage;\n\n  const parsedQuery = parseQuery(unparsedQuery);\n  \n  return {\n    type: API_REQUEST,\n    payload: {\n      url: '/discover/movie',\n      onSuccess: (payload) => [\n        saveCallback(payload, unparsedQuery)\n      ],\n      data: { ...baseQuery(), ...parsedQuery }\n    }\n  }\n}\n\nexport const fetchMoviesDiscover = (unparsedQuery, currentPage) => {\n  return _fetchMoviesBase(unparsedQuery, currentPage, defaultQueryValues, saveMoviesDiscover);\n};\n\nexport const fetchMoviesDiscoverTopRated = (unparsedQuery, currentPage) => {\n  return _fetchMoviesBase(unparsedQuery, currentPage, topRatedQueryValues, saveMoviesDiscoverTop);\n};\n\nexport const fetchMoviesDiscoverUpcoming = (unparsedQuery, currentPage) => {\n  return _fetchMoviesBase(unparsedQuery, currentPage, upcomingQueryValues, saveMoviesDiscoverUpcoming);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\n\nconst Paginate = ({ currentPage, totalPages, queryPage, handlePageClick }) => {\n  let page;\n  if (currentPage === 0) {\n    page = queryPage - 1 || currentPage ;\n  } else {\n    page = currentPage - 1\n  }\n\n  return (\n    <ReactPaginate\n      previousLabel={(<IoIosArrowBack/>)}\n      nextLabel={(<IoIosArrowForward/>)}\n      breakLabel='...'\n      breakClassName='item break'\n      pageClassName='item'\n      previousClassName='item previous'\n      nextClassName='item next'\n      pageCount={totalPages}\n      forcePage={page}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={2}\n      onPageChange={handlePageClick}\n      containerClassName='pagination'\n      subContainerClassName='pages pagination'\n      activeClassName='active'\n    />\n  )\n}\n\nPaginate.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  queryPage: PropTypes.number,\n  handlePageClick: PropTypes.func.isRequired\n}\n\nexport default Paginate\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SORT_BY } from '../../helpers/query';\nimport { IoIosArrowForward, IoIosArrowDown } from 'react-icons/io';\nimport './FilterCard.scss';\n\nimport Select from 'react-select';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\nconst FilterCard = ({ name, filters, onQueryChange }) => {\n  const [closed, openFilter] = useState(true);\n\n  const _FilterDropdown = (defaultValue) => {\n    return (\n      <Select \n        options={Object.values(SORT_BY)}\n        defaultValue={defaultValue}\n        onChange={onQueryChange}\n        className=\"select-dropdown\"\n        classNamePrefix=\"select-dropdown\"\n        isSearchable={false}\n      />\n    )\n  }\n\n  const _FilterGenres = (availableGenres, defaultValue) => {\n    const _checkValues = (event) => {\n      if (!event || event.length === 0) {\n        event = {\n          type: 'with_genres',\n          isEmpty: true\n        }\n      }\n\n      onQueryChange(event, 'with_genres');\n    }\n\n    return (\n      <Select \n        options={Object.values(availableGenres)}\n        defaultValue={defaultValue}\n        onChange={(event) => _checkValues(event)}\n        className=\"select-dropdown\"\n        classNamePrefix=\"select-dropdown\"\n        isMulti={true}\n        isSearchable={false}\n      />\n    )\n  }\n\n  const _FilterDates = (defaultValue) => {\n    const _checkDate = (date, stateObject) => {\n      onQueryChange({ ...stateObject, value: date });\n    }\n\n    return (\n      <>\n        <div className=\"date-from\">\n          <span className=\"label\">{defaultValue[0].label}</span>\n          <span>\n            <DatePicker \n              selected={defaultValue[0].value}\n              onChange={(date) => _checkDate(date, defaultValue[0])}\n              dateFormat=\"yyyy-MM\"\n              placeholderText=\"Click to select a date\"\n              showMonthYearPicker\n            />\n          </span>\n        </div>\n        <div className=\"date-to\">\n          <span className=\"label\">{defaultValue[1].label}</span>\n          <span>\n            <DatePicker \n              selected={defaultValue[1].value}\n              onChange={(date) => _checkDate(date, defaultValue[1])}\n              dateFormat=\"yyyy-MM\"\n              placeholderText=\"Click to select a date\"\n              showMonthYearPicker\n            />\n          </span>\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <div className={`filter-card ${closed ? 'closed' : ''}`}>\n      {name && (\n        <div className=\"name\" onClick={() => openFilter(!closed)}>\n          <h3>{name}</h3>\n          <h3>\n            {closed ? (\n              <IoIosArrowForward/>\n            ) : (\n              <IoIosArrowDown/>\n            )}\n          </h3>\n        </div>\n      )}\n      {filters.map((filter) => (\n        <div key={filter.name} className=\"filter-item\">\n          <h4>{filter.name}</h4>\n          {filter.type === 'dropdown' && (\n            _FilterDropdown(filter.defaultValue)\n          )}\n          {filter.type === 'genres' && (\n            _FilterGenres(filter.availableGenres, filter.defaultValue)\n          )}\n          {filter.type === 'datepicker' && (\n            _FilterDates(filter.defaultValue)\n          )}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nFilterCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  filters: PropTypes.array.isRequired,\n  onQueryChange: PropTypes.func.isRequired\n}\n\nexport default FilterCard\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FilterCard from './FilterCard';\nimport { RELEASE_DATE } from '../../helpers/query';\n\nconst FilterList = ({ handleSubmit, userQuery, availableGenres }) => {\n  const [state, setState] = useState(userQuery);\n  const [searchDisabled, setSearch] = useState(true);\n\n  \n  const onQueryChange = (data) => {\n    let { type } = data;\n    \n    if (Array.isArray(data)) {\n      type = data[0].type;\n    }\n\n    if (searchDisabled) {\n      setSearch((prevState) => setSearch(!prevState));\n    }\n\n    if (data.isEmpty) {\n      return setState((prevState) => ({ ...prevState, [data.type]: [] }));\n    }\n\n    return setState((prevState) => ({ ...prevState, [type]: data }));\n  }\n\n  return (\n    <>\n      <FilterCard \n        name=\"Sort\"\n        onQueryChange={onQueryChange}\n        filters={\n          [\n            { \n              name: 'Results by', \n              type: 'dropdown', \n              defaultValue: state.sort_by,\n            }\n          ]\n        }\n        />\n      <FilterCard \n        name=\"Filters\"\n        onQueryChange={onQueryChange}\n        filters={\n          [\n            { \n              name: 'Genres', \n              type: 'genres', \n              availableGenres,\n              defaultValue: state.with_genres\n            },\n            {\n              name: 'Release Dates',\n              type: 'datepicker',\n              defaultValue: [\n                state[RELEASE_DATE.greaterThan.type] || RELEASE_DATE.greaterThan,\n                state[RELEASE_DATE.lessThan.type] || RELEASE_DATE.lessThan\n              ]\n            }\n          ]\n        }\n      />\n      <button \n        className={`filter-card search-button ${  searchDisabled ? 'disabled' : ''}`} \n        onClick={() => { handleSubmit(state); setSearch((prevState) => setSearch(!prevState)) }}\n      >\n        <h3 className=\"label\">Search</h3>\n      </button>\n    </>\n  )\n}\n\nFilterList.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  userQuery: PropTypes.object.isRequired,\n  availableGenres: PropTypes.object.isRequired\n}\n\nexport default FilterList\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { clearStoreState } from '../../actions/movies/discover';\nimport Paginate from '../../components/Paginate';\nimport SplashScreen from '../../components/layout/SplashScreen';\nimport ItemThumb from '../../components/cards/ItemThumb';\nimport FilterList from '../../components/filters/FilterList';\nimport SimpleLoader from '../../components/layout/SimpleLoader';\nimport { SORT_BY } from '../../helpers/query';\nimport './GridBase.scss';\n\nconst defaultQuery = {\n  sort_by: SORT_BY.popularityDesc,\n  page: 0\n}\n\nexport default (WrappedContainer, fetchDataAction, itemType, wrappedQuery = defaultQuery, mainTitle) => {\n  class GridBase extends Component {\n    static propTypes = {\n      WrappedContainer: PropTypes.element,\n      fetchData: PropTypes.func,\n      itemType: PropTypes.object,\n      wrappedQuery: PropTypes.shape({\n        sort_by: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n        page: PropTypes.number.isRequired\n      })\n    }\n  \n    state = {\n      pageChanged: false,\n      currentPage: 0,\n      query: null\n    }\n\n    componentDidMount() {\n      if (!this.props.data.isLoaded) {\n        this.fetchData(undefined, 1);\n      }\n    }\n  \n    componentWillUnmount() {\n      if (!this.props.history.location.pathname.match('/movies/details|tv/details/')) {\n        this.props.clearStoreState();\n      }\n    }\n  \n    componentDidUpdate(prevProps, prevState) {\n      if (prevState.currentPage !== this.state.currentPage) {\n        this.fetchData(\n          this.props.data.query|| undefined, \n          this.state.currentPage\n        );\n      }\n    }\n  \n    fetchData(query = wrappedQuery, currentPage) {\n      this.props.fetchDataAction(query, currentPage);\n    }\n  \n    handleSubmit = (newQuery) => {\n      this.setState({ query: newQuery, currentPage: 1 });\n      this.fetchData(newQuery);\n    }\n  \n    handlePageClick = (data) => {\n      const selectedPage = data.selected + 1;\n      this.setState({ currentPage: selectedPage, pageChanged: true });\n    }\n  \n    renderFilterPanel() {\n      const { genresForms } = this.props.apiConfig;\n      const { wrappedQuery } = this.props;\n  \n      return (\n        <FilterList\n          handleSubmit={this.handleSubmit}\n          defaultQuery={wrappedQuery}\n          userQuery={this.props.data.query}\n          availableGenres={genresForms}\n        />\n      );\n    }\n  \n    renderPaginate() {\n      const { data } = this.props;\n  \n      if (data.total_pages < 1) {\n        return (<div/>);\n      }\n      \n      return (\n        <Paginate\n          currentPage={this.state.currentPage}\n          totalPages={data.total_pages}\n          queryPage={data.query.page}\n          handlePageClick={this.handlePageClick}\n        />\n      );\n    }\n\n    renderContent = () => {\n      const { data, apiConfig, isLoading } = this.props;\n    \n      return (\n        <div className=\"body-container no-padding poster-grid\">\n          <section className=\"main-title\">\n            {mainTitle}\n          </section>\n          <section className=\"posters\">\n            <section className=\"filters\">\n              {this.renderFilterPanel()}\n            </section>\n            <section className=\"grid-start\">\n              {data.total_results === 0 && (\n                <p className=\"no-query\">Sorry, no items were found that match your query.</p>\n              )}\n              {isLoading ? (\n                <div className=\"loader\">\n                  <SimpleLoader/>\n                </div>\n              ) : (\n                <>\n                  <ul className=\"poster-list\">\n                    {data.results.map((item) => (\n                      <li className=\"poster-item\" key={item.id}>\n                        <ItemThumb\n                          data={item}\n                          apiConfig={apiConfig}\n                          itemType={itemType}\n                        />\n                      </li>\n                    ))}\n                  </ul>\n                  {this.renderPaginate()}\n                </>\n              )}\n            </section>\n          </section>\n        </div>\n      )\n    }\n\n    render() {\n      if (!this.props.data.isLoaded) {\n        return (<SplashScreen/>);\n      }\n\n      return (\n        <WrappedContainer \n          {...this.props} \n          renderContent={this.renderContent}\n        />\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    apiConfig: state.apiConfig,\n    isLoading: state.userInterface.pendingRequests > 0\n  });\n\n  const actionCreators = {\n    fetchDataAction, \n    clearStoreState\n  }\n\n  return withRouter(connect(mapStateToProps, actionCreators)(GridBase));\n}","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchMoviesDiscover } from '../../../actions/movies/discover';\nimport { ITEM_TYPE } from '../../../helpers/itemType';\nimport GridBase from '../GridBase';\n\nclass Popular extends Component {\n  static propTypes = {\n    fetchMoviesDiscover: PropTypes.func,\n    data: PropTypes.object.isRequired\n  }\n\n  render() {\n    return this.props.renderContent();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.moviesDiscover\n});\n\nexport default connect(mapStateToProps, {})\n  (GridBase(\n    Popular, \n    fetchMoviesDiscover, \n    ITEM_TYPE.MOVIES, \n    undefined, 'Popular movies'\n  ));\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchMoviesDiscoverUpcoming } from '../../../actions/movies/discover';\nimport { ITEM_TYPE } from '../../../helpers/itemType';\nimport GridBase from '../GridBase';\n\nclass Upcoming extends Component {\n  static propTypes = {\n    fetchMoviesDiscoverUpcoming: PropTypes.func,\n    data: PropTypes.object.isRequired\n  }\n\n  render() {\n    return this.props.renderContent();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.moviesDiscoverUpcoming\n});\n\nexport default connect(mapStateToProps, {})\n  (GridBase(\n    Upcoming, \n    fetchMoviesDiscoverUpcoming, \n    ITEM_TYPE.MOVIES, \n    undefined, \n    'Upcoming Movies'\n  ));\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchMoviesDiscoverTopRated } from '../../../actions/movies/discover';\nimport GridBase from '../GridBase';\nimport { ITEM_TYPE } from '../../../helpers/itemType';\nimport { SORT_BY } from '../../../helpers/query';\n\nconst defaultQuery = {\n  sort_by: SORT_BY.ratingDesc,\n  page: 0\n}\n\nclass TopRated extends Component {\n  static propTypes = {\n    fetchMoviesDiscoverTopRated: PropTypes.func,\n    data: PropTypes.object.isRequired\n  }\n\n  render() {\n    return this.props.renderContent();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.moviesDiscoverTop\n});\n\nexport default connect(mapStateToProps, {})\n  (GridBase(\n    TopRated, \n    fetchMoviesDiscoverTopRated, \n    ITEM_TYPE.MOVIES, \n    defaultQuery, \n    'Top Rated Movies'\n  ));\n","import { parseVideos } from '../../helpers/parseVideos';\nimport { parseCrew } from '../../helpers/parseCrew';\nimport { \n  API_REQUEST, \n  GET_TV_DETAILS, \n} from '../../constants';\n\nconst saveTvDetails = (payload) => {\n  payload.videos = parseVideos(payload.videos.results);\n  payload.credits.crew = parseCrew(payload.credits.crew);\n  \n  return {\n    type: GET_TV_DETAILS,\n    payload\n  }\n};\n\nexport const fetchTvDetails = (id) => ({\n  type: API_REQUEST,\n  payload: {\n    url: `/tv/${id}`,\n    onSuccess: saveTvDetails,\n    data: {\n      append_to_response: 'credits,videos,reviews,recommendations'\n    }\n  }\n});","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTvDetails } from '../../actions/tv/details';\r\nimport BaseHoc from './BaseHoc';\r\nimport Backdrop from '../../components/Backdrop';\r\nimport DetailsImage from '../../components/DetailsImage';\r\nimport SectionHeader from '../../components/SectionHeader';\r\nimport ItemList from '../../components/cards/ItemList';\r\nimport ReviewList from '../../components/details/ReviewList';\r\nimport Button from '../../components/layout/Button';\r\nimport ActionBar from '../../components/details/ActionBar';\r\nimport Directors from '../../components/details/Director';\r\nimport { getYear } from '../../helpers/movie';\r\n\r\nclass TvDetails extends Component {\r\n  static propTypes = {\r\n    fetchTvDetails: PropTypes.func\r\n  }\r\n\r\n  renderSidebar() {\r\n    const { data, apiConfig } = this.props; \r\n\r\n    return (\r\n      <section className=\"item-details-info\">\r\n        <div className=\"genres\">\r\n          <h4 className=\"header\">Genres</h4>\r\n          {data.genres.map((genre) => (\r\n            <Fragment key={genre.id}>\r\n              <Button label={genre.name}/>\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n        <div className=\"extras\">\r\n          <h4 className=\"header\">Additional info</h4>\r\n          <p>\r\n            First air date:\r\n            <br/>\r\n            {data.first_air_date}\r\n          </p>\r\n          <p></p>\r\n          {/* // FIXME #1: TMDB Removed append_to_response usage on /configuration endpoint */}\r\n          {/* <p>\r\n            Original language:\r\n            <br/>\r\n            {apiConfig.languages[data.original_language]}\r\n          </p> */}\r\n          <p>\r\n            Number of seasons:\r\n            <br/>\r\n            {data.number_of_seasons}\r\n          </p>\r\n          <p>\r\n            Number of episodes:\r\n            <br/>\r\n            {data.number_of_episodes}\r\n          </p>\r\n          <p>\r\n            Episode run time:\r\n            <br/>\r\n            {data.episode_run_time[0] ? `${data.episode_run_time[0]} min` : '-'}\r\n          </p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { apiConfig, data } = this.props;\r\n\r\n    const linkToCast = `${this.props.location.pathname}/full-cast`;\r\n\r\n    return (\r\n      <div className=\"item-details-container\">\r\n        <Backdrop\r\n          backdropPath={data.backdrop_path}\r\n          imageConfig={apiConfig.imageConfig}\r\n        />\r\n        <div className=\"body-container\">\r\n          <div className=\"item-details-wrapper\">\r\n            <section className=\"poster\">\r\n              <DetailsImage \r\n                imagePath={data.poster_path}\r\n                imageConfig={apiConfig.imageConfig}\r\n              />\r\n            </section>\r\n            <section className=\"item-details-main\">\r\n              <section className=\"header\">\r\n                <span className=\"main-title\">\r\n                  {data.name} \r\n                  <br/>\r\n                  <span className=\"year white-med-color\">({getYear(data.first_air_date) || '-'})</span>\r\n                </span>\r\n                <br/>\r\n                <Directors data={data.created_by} label=\"Created by\"/>\r\n              </section>\r\n              <ActionBar\r\n                data={data}\r\n              />\r\n              <section className=\"overview\">\r\n                <p>{data.overview}</p>\r\n              </section>\r\n            </section>\r\n            {this.renderSidebar()}\r\n            <section className=\"item-details-cast\">\r\n              <SectionHeader\r\n                title='Cast'\r\n                linkName='View full Cast & Crew'\r\n                linkTo={linkToCast}\r\n              />\r\n              <ItemList\r\n                data={data.credits.cast}\r\n                apiConfig={apiConfig}\r\n                viewMoreLink={linkToCast}\r\n              />\r\n            </section>\r\n            <section className=\"item-details-reviews\">\r\n              <SectionHeader\r\n                title='Reviews'\r\n              />\r\n              <ReviewList\r\n                data={data.reviews.results.slice(0, 4)}\r\n              />\r\n            </section>\r\n            <section className=\"item-details-recommendations\">\r\n              <SectionHeader\r\n                title='Recommendations'\r\n              />\r\n              <ItemList\r\n                data={data.recommendations.results.slice(0, 12)}\r\n                apiConfig={apiConfig}\r\n                viewMore={false}\r\n              />\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.tvDetails,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(BaseHoc(TvDetails, fetchTvDetails));\r\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchTvDetails } from '../../../actions/tv/details';\nimport CastBase from './CastBase';\n\nexport class TvCast extends Component {\n  static propTypes = {\n    fetchMoviesFullCast: PropTypes.func,\n    data: PropTypes.object.isRequired\n  }\n\n  render() {\n    return this.props.renderContent();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.tvDetails\n});\n\nexport default connect(mapStateToProps, {})(CastBase(TvCast, fetchTvDetails));\n","import { \n  API_REQUEST, \n  GET_TV_DISCOVER,\n  GET_TV_DISCOVER_TOP,\n  CLEAR_STORE_STATE \n} from '../../constants';\nimport { \n  parseQuery, \n  defaultQueryValues, \n  topRatedQueryValues\n} from '../../helpers/query';\n\nconst saveTvDiscover = (payload, query) => {\n  return {\n    type: GET_TV_DISCOVER,\n    payload,\n    query\n  }\n};\n\nconst saveTvDiscoverTop = (payload, query) => {\n  return {\n    type: GET_TV_DISCOVER_TOP,\n    payload,\n    query\n  }\n};\n\nexport const clearStoreState = () => ({\n  type: CLEAR_STORE_STATE\n});\n\nconst _fetchTvBase = (unparsedQuery, currentPage, baseQuery, saveCallback) => {\n  unparsedQuery.page = currentPage;\n\n  const parsedQuery = parseQuery(unparsedQuery);\n  \n  return {\n    type: API_REQUEST,\n    payload: {\n      url: '/discover/tv',\n      onSuccess: (payload) => [\n        saveCallback(payload, unparsedQuery)\n      ],\n      data: { ...baseQuery(), ...parsedQuery }\n    }\n  }\n}\n\nexport const fetchTvDiscover = (unparsedQuery, currentPage) => {\n  return _fetchTvBase(unparsedQuery, currentPage, defaultQueryValues, saveTvDiscover);\n};\n\nexport const fetchTvDiscoverTopRated = (unparsedQuery, currentPage) => {\n  return _fetchTvBase(unparsedQuery, currentPage, topRatedQueryValues, saveTvDiscoverTop);\n};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchTvDiscover } from '../../../actions/tv/discover';\nimport { ITEM_TYPE } from '../../../helpers/itemType';\nimport GridBase from '../GridBase';\n\nclass Popular extends Component {\n  static propTypes = {\n    fetchTvDiscover: PropTypes.func,\n    data: PropTypes.object.isRequired\n  }\n\n  render() {\n    return this.props.renderContent();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.tvDiscover\n});\n\nexport default connect(mapStateToProps, {})\n  (GridBase(\n    Popular, \n    fetchTvDiscover, \n    ITEM_TYPE.TV, \n    undefined, \n    'Popular Series'\n  ));\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchTvDiscoverTopRated } from '../../../actions/tv/discover';\nimport GridBase from '../GridBase';\nimport { ITEM_TYPE } from '../../../helpers/itemType';\nimport { SORT_BY } from '../../../helpers/query';\n\nconst defaultQuery = {\n  sort_by: SORT_BY.ratingDesc,\n  page: 0\n}\n\nclass TopRated extends Component {\n  static propTypes = {\n    fetchTvDiscoverTopRated: PropTypes.func,\n    data: PropTypes.object.isRequired\n  }\n\n  render() {\n    return this.props.renderContent();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.tvDiscoverTop\n});\n\nexport default connect(mapStateToProps, {})\n  (GridBase(\n    TopRated, \n    fetchTvDiscoverTopRated, \n    ITEM_TYPE.TV, \n    defaultQuery, \n    'Top Rated Series'\n  ));\n","import { \n  API_REQUEST, \n  GET_PERSON_DETAILS, \n} from '../constants';\nimport { getYear } from '../helpers/movie';\n\nconst _sortByKey = (data, key, additionalFunction) => {\n  if (!data) {\n    return {}\n  }\n\n  return data.sort((a, b) => {\n    if (additionalFunction === 'date') {\n      return new Date(b[key]) - new Date(a[key]);\n    } else if (additionalFunction) {\n      return additionalFunction(b[key]) - additionalFunction(a[key]);\n    } else {\n      return b[key] - a[key];\n    }\n  }).slice(0, 12);\n};\n\nconst _removeDuplicates = (array) => {\n  const duplicatedHash = new Set();\n\n  return array.filter((item) => {\n    const duplicate = duplicatedHash.has(item.id);\n    duplicatedHash.add(item.id);\n    \n    return !duplicate;\n  });\n}\n\nconst _parseItemCredits = (data, dateKey) => {\n  let parsedHash = {};\n\n  Object.keys(data).forEach((dataType) => {\n    // Sort items for each key by date;\n    _sortByKey(data[dataType], dateKey, 'date');\n\n    // Loop through sorted items and create hash;\n    data[dataType].forEach((item) => {\n      const year = getYear(item[dateKey]) || 0;\n      const yearIsEmpty = year === 0;\n\n      if (!parsedHash.hasOwnProperty(dataType)) {\n        parsedHash[dataType] = {};\n      }\n      \n      if (!parsedHash[dataType].hasOwnProperty(year)) {\n        parsedHash[dataType][year] = [];\n      }\n\n      let arrayToPush = parsedHash[dataType][year];\n      let arrayLastElement;\n\n      if (yearIsEmpty) {\n        arrayLastElement = arrayToPush.find((lastItem) => lastItem.id === item.id);\n      } else {\n        arrayLastElement = arrayToPush[arrayToPush.length - 1];\n      }\n      \n      if (\n        (yearIsEmpty && arrayLastElement) || \n        (arrayLastElement && arrayLastElement.id === item.id)\n      ) {\n        (arrayLastElement.extras = []).push(item);\n      } else {\n        arrayToPush.push(item);\n      }\n\n    });\n  });\n\n  return parsedHash;\n};\n\nconst savePersonDetails = (payload) => {\n  payload.movie_credits = _parseItemCredits(payload.movie_credits, 'release_date');\n  payload.tv_credits = _parseItemCredits(payload.tv_credits, 'first_air_date');\n\n  payload.most_known_for = _removeDuplicates(_sortByKey(\n    payload.combined_credits.cast.slice(),\n    'vote_count',\n    parseFloat\n  ));\n\n  return {\n    type: GET_PERSON_DETAILS,\n    payload\n  }\n};\n\nexport const fetchPersonDetails = (id) => ({\n  type: API_REQUEST,\n  payload: {\n    url: `/person/${id}`,\n    onSuccess: savePersonDetails,\n    data: {\n      append_to_response: 'movie_credits,tv_credits,combined_credits,external_ids'\n    }\n  }\n});","export const hasData = (object) => Object.keys(object).length > 0;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Button from './layout/Button';\r\nimport { getYear } from '../helpers/movie';\r\nimport { hasData } from '../helpers/object';\r\nimport './CreditsTable.scss';\r\n\r\nclass CreditsTable extends Component {\r\n  static propTypes = {\r\n    movieCredits: PropTypes.object,\r\n    tvCredits: PropTypes.object\r\n  }\r\n  \r\n  state = {\r\n    creditsToShow: 'movieCredits'\r\n  }\r\n\r\n  changeCredits = (id, event) => {\r\n    if (this.state.creditsToShow === id) {\r\n      event.preventDefault();\r\n    } else {\r\n      this.setState({ creditsToShow: id });\r\n    }\r\n  }\r\n\r\n  goToDetails = (id) => {\r\n    const redirectPath = `/${this.state.creditsToShow === 'movieCredits' ? 'movies' : 'tv'}/details/${id}`;\r\n    this.props.history.push(redirectPath);\r\n  }\r\n\r\n  renderSelectionButtons() {\r\n    return (\r\n      <div className=\"credits-buttons\">\r\n        <Button label=\"Movies\"\r\n          className=\"test\" \r\n          disabled={!hasData(this.props.movieCredits)}\r\n          onClick={(event) => this.changeCredits('movieCredits', event)}\r\n        />\r\n        <Button \r\n          label=\"Series\" \r\n          disabled={!hasData(this.props.tvCredits)}\r\n          onClick={(event) => this.changeCredits('tvCredits', event)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTableRow(item, showYear = true) {\r\n    return (\r\n      <tr className=\"table-item\" onClick={() => this.goToDetails(item.id)}>\r\n        <td className=\"item-year\">\r\n          {showYear && (\r\n            <>\r\n              {getYear(item.release_date || item.first_air_date) || '-'}\r\n            </>\r\n          )}\r\n          </td>\r\n        <td>\r\n          <span className=\"item-title\">{item.title || item.name || '-'}</span>\r\n          {item.episode_count > 0 && (\r\n            <span className=\"white-med-color\">\r\n              {` [${item.episode_count} ${item.episode_count > 1 ? 'episodes' : 'episode'}]`}\r\n            </span>\r\n          )}\r\n          <span className=\"white-med-color\"> as </span> \r\n          {item.character || item.job || '-'}\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  renderTable(dataName, departmentName) {\r\n    const data = this.props[dataName];\r\n\r\n    return (\r\n      <table className=\"table-main\">\r\n        <caption className=\"name\">{departmentName}</caption>\r\n        <tbody>\r\n          {Object.keys(data[departmentName]).reverse().map((key) => (\r\n            <tr key={key} className=\"table-group\">\r\n              <td>\r\n                <table>\r\n                  <tbody>\r\n                    {data[departmentName][key].map((item) => (\r\n                      <Fragment key={item.id}>\r\n                        {this.renderTableRow(item)}\r\n                        {item.extras && (\r\n                          <>\r\n                            {item.extras.map((extra, index) => (\r\n                              <Fragment key={`${item.id}-${index}`}>\r\n                                {this.renderTableRow(extra, false)}\r\n                              </Fragment>\r\n                            ))}\r\n                          </>\r\n                        )}\r\n                      </Fragment>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const dataName = this.state.creditsToShow;\r\n\r\n    if (!hasData(this.props[dataName])) {\r\n      return (\r\n        <p className=\"no-available\">There are no available items.</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {this.renderSelectionButtons()}  \r\n        {Object.keys(this.props[dataName]).map((departmentName) => (\r\n          <Fragment key={`${dataName}${departmentName}`}>\r\n            {this.renderTable(dataName, departmentName)}\r\n          </Fragment>\r\n        ))}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreditsTable);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPersonDetails } from '../actions/personDetails';\nimport SplashScreen from '../components/layout/SplashScreen';\nimport DetailsImage from '../components/DetailsImage';\nimport SectionHeader from '../components/SectionHeader';\nimport ItemList from '../components/cards/ItemList';\nimport CreditsTable from '../components/CreditsTable';\nimport { isOverflown } from '../helpers/scroll';\nimport { \n  FaFacebook, \n  FaTwitter, \n  FaInstagram, \n} from 'react-icons/fa';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io'; \nimport './Person.scss';\n\nclass Person extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    apiConfig: PropTypes.object.isRequired\n  }\n\n  state = {\n    biographyExtended: false\n  }\n\n  constructor(props) {\n    super(props);\n    this.biographyDiv = React.createRef();\n    this.biographyExtendButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchPersonDetails(id);\n  }\n\n  componentDidUpdate() {\n    if (\n      !this.state.biographyExtended &&\n      this.biographyDiv.current && \n      !isOverflown(this.biographyDiv.current)\n    ) {\n      this.biographyExtendButton.current.classList.add('hide');\n    }\n  }\n\n  renderSocialLinks() {\n    const data = this.props.data.external_ids;\n\n    return (\n      <span className=\"social-links\">\n        {data.facebook_id && (\n          <a href={`https://www.facebook.com/${data.facebook_id}`}>\n            <FaFacebook/>\n          </a>\n        )}\n        {data.instagram_id && (\n          <a href={`https://www.instagram.com/${data.instagram_id}`}>\n            <FaInstagram/>\n          </a>\n        )}\n        {data.twitter_id && (\n          <a href={`https://www.twitter.com/${data.twitter_id}`}>\n            <FaTwitter/>\n          </a>\n        )}\n      </span>\n    )\n  }\n\n  renderAdditionalInfo() {\n    const { data } = this.props;\n\n    const _getValue = (value) => data[value] ? data[value] : '-';\n\n    return (\n      <section className=\"additional\">\n        <ul>\n          <li>\n            <span className=\"white-med-color\">Known for:</span> {_getValue('known_for_department')}\n          </li>\n          <li>\n          <span className=\"white-med-color\">Birthday:</span> {_getValue('birthday')}\n          </li>\n          <li>\n            <span className=\"white-med-color\">Place of birth:</span> {_getValue('place_of_birth')}\n          </li>\n        </ul>\n      </section>\n    );\n  }\n\n  extendBiography = () => {\n    this.setState((state) => ({\n      biographyExtended: !state.biographyExtended\n    }));\n  }\n\n  renderBiography() {\n    if (!this.props.data.biography) {\n      return (\n        <section className=\"person-biography\">\n          <p>Biography</p>\n          <div className=\"content\">\n            Sorry, biography is unavailable at this time.\n          </div>\n        </section>\n      );\n    }\n\n    let extendButton = (\n      <>\n        Show more <IoIosArrowDown/>\n      </>\n    );\n\n    if (this.state.biographyExtended) {\n      extendButton = (\n        <>\n          Show less <IoIosArrowUp/> \n        </>\n      );\n    }\n\n    return (\n      <section className=\"person-biography\">\n        <p>Biography</p>\n        <div \n          className={`content ${this.state.biographyExtended ? 'extended' : 'hidden'}`}\n          ref={this.biographyDiv}\n        >\n          {this.props.data.biography}\n        </div>\n      \n        <span \n          className=\"extend-button\" \n          ref={this.biographyExtendButton} \n          onClick={this.extendBiography}\n        >\n          {extendButton}\n        </span>\n      </section>\n    )\n  }\n\n  render() {\n    const { data, apiConfig } = this.props;\n\n    if (!data.isLoaded || this.props.isLoading) {\n      return (<SplashScreen/>);\n    }\n\n    return (\n      <div className=\"person-details-container\">\n        <div className=\"body-container person-details-wrapper\">\n          <section className=\"poster\">\n            <DetailsImage \n              imagePath={data.profile_path}\n              imageConfig={apiConfig.imageConfig}\n            />\n          </section>\n          <section className=\"person-details-main\">\n            <section className=\"title\">\n              <span className=\"main-title\">{data.name}</span>\n              <br/>\n              {this.renderSocialLinks()}\n            </section>\n            {this.renderAdditionalInfo()}\n            {this.renderBiography()}\n          </section>\n          <section className=\"person-details-known\">\n            <SectionHeader\n              title='Known For'\n            />\n            <ItemList\n              data={data.most_known_for}\n              apiConfig={apiConfig}\n              viewMore={false}\n            />\n          </section>\n          <section className=\"person-details-credits\">\n            <SectionHeader\n              title='Credits'\n            />\n            <CreditsTable \n              movieCredits={data.movie_credits} \n              tvCredits={data.tv_credits} \n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  apiConfig: state.apiConfig,\n  isLoading: state.userInterface.pendingRequests > 0,\n  data: state.personDetails\n});\n\nexport default connect(mapStateToProps, { fetchPersonDetails })(Person);\n","import { \n  API_REQUEST, \n  GET_SEARCH_PERSON,\n  GET_SEARCH_MOVIES,\n  GET_SEARCH_TV,\n  SET_SEARCH_QUERY,\n  CLEAR_STORE_STATE\n} from '../constants';\nimport { defaultSearchQueryValues } from '../helpers/query';\n\nconst saveSearchPerson = (payload) => ({\n  type: GET_SEARCH_PERSON,\n  payload\n});\n\nconst saveSearchMovies = (payload) => ({\n  type: GET_SEARCH_MOVIES,\n  payload\n});\n\nconst saveSearchTv = (payload) => ({\n  type: GET_SEARCH_TV,\n  payload\n});\n\nexport const setSearchQueryUser = (payload) => ({\n  type: SET_SEARCH_QUERY,\n  payload\n})\n\nexport const clearStoreState = () => ({\n  type: CLEAR_STORE_STATE\n})\n\nexport const fetchSearchMovies = (unparsedQuery, currentPage) => {\n  unparsedQuery.page = currentPage;\n\n  return {\n    type: API_REQUEST,\n    payload: {\n      url: '/search/movie',\n      onSuccess: (payload) => [\n        saveSearchMovies(payload)\n      ],\n      data: { ...defaultSearchQueryValues(), ...unparsedQuery }\n    }\n  }\n}\n\nexport const fetchSearchPerson = (unparsedQuery, currentPage) => {\n  unparsedQuery.page = currentPage;\n  \n  return {\n    type: API_REQUEST,\n    payload: {\n      url: '/search/person',\n      onSuccess: (payload) => [\n        saveSearchPerson(payload)\n      ],\n      data: { ...defaultSearchQueryValues(), ...unparsedQuery }\n    }\n  }\n}\n\nexport const fetchSearchTv = (unparsedQuery, currentPage) => {\n  unparsedQuery.page = currentPage;\n\n  return {\n    type: API_REQUEST,\n    payload: {\n      url: '/search/tv',\n      onSuccess: (payload) => [\n        saveSearchTv(payload)\n      ],\n      data: { ...defaultSearchQueryValues(), ...unparsedQuery }\n    }\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { \n  fetchSearchPerson,\n  fetchSearchMovies,\n  fetchSearchTv,\n  setSearchQueryUser,\n  clearStoreState\n} from '../actions/search';\nimport { ITEM_TYPE } from '../helpers/itemType';\nimport SplashScreen from '../components/layout/SplashScreen';\nimport Paginate from '../components/Paginate';\nimport SimpleLoader from '../components/layout/SimpleLoader';\nimport ItemThumb from '../components/cards/ItemThumb';\nimport ItemCast from '../components/cards/ItemCast';\nimport './Search.scss';\n\nclass Search extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  }\n\n  state = {\n    dataToShow: 'person',\n    person: {\n      currentPage: 1\n    },\n    movie: {\n      currentPage: 1\n    },\n    tv: {\n      currentPage: 1\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.data.userQuery) {\n      this.setState(this.props.data.userQuery);\n    }\n\n    if (this.props.location.state) {\n      this.props.fetchSearchPerson(this.props.location.state, 1);\n      this.props.fetchSearchMovies(this.props.location.state, 1);\n      this.props.fetchSearchTv(this.props.location.state, 1);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentDataName = this.state.dataToShow;\n\n    if (prevProps.location.state !== this.props.location.state) {\n      this.props.fetchSearchPerson(this.props.location.state, 1);\n      this.props.fetchSearchMovies(this.props.location.state, 1);\n      this.props.fetchSearchTv(this.props.location.state, 1);\n    }\n\n    if (prevState[currentDataName].currentPage !== this.state[currentDataName].currentPage) {\n      const searchQuery = this.props.location.state;\n      const currentPage = this.state[currentDataName].currentPage;\n\n      switch(currentDataName) {\n        case 'person':\n          this.props.fetchSearchPerson(searchQuery, currentPage);\n          break;\n        case 'movie':\n          this.props.fetchSearchMovies(searchQuery, currentPage);\n          break;\n        case 'tv':\n          this.props.fetchSearchTv(searchQuery, currentPage);\n          break;\n        default:\n          return null;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.history.location.pathname.match('/movies/details|/tv/details|/person-details/')) {\n      this.props.setSearchQueryUser(this.state);\n    } else {\n      this.props.clearStoreState();\n    }\n  }\n\n  handlePageClick = (data) => {\n    const { state } = this;\n    \n    const selectedPage = data.selected + 1;\n    this.setState({ [state.dataToShow]: { currentPage: selectedPage } });\n  }\n\n  handleDataChange = (type) => {\n    this.setState({ dataToShow: type });\n  }\n\n  renderPaginate() {\n    const { state } = this;\n    const currentData = this.props.data[state.dataToShow];\n\n    if (currentData.total_pages < 1) {\n      return (<div/>);\n    }\n    \n    return (\n      <Paginate\n        currentPage={state[state.dataToShow].currentPage}\n        totalPages={currentData.total_pages}\n        queryPage={1}\n        handlePageClick={this.handlePageClick}\n      />\n    );\n  }\n\n  render() {\n    const { data, apiConfig, isLoading } = this.props;\n    const { state } = this;\n\n    if (!this.props.data.isLoaded) {\n      return (<SplashScreen/>);\n    }\n\n    const currentData = data[state.dataToShow];\n    if (!currentData) {\n      return (<div/>);\n    }\n\n    return (\n      <div className=\"body-container no-padding poster-grid\">\n        <section className=\"main-title\">\n          <span>Search Results</span>\n        </section>\n        <section className=\"posters\">\n          <section className=\"filters\">\n            <div \n              className={`filter-card ${data.person && data.person.total_results === 0 ? 'disabled' : ''} ${state.dataToShow === 'person' ? 'selected' : ''}`}\n              onClick={() => this.handleDataChange('person')}\n            >\n              <div className=\"name\">\n                <h3>People</h3>\n                <h3>( {data.person ? data.person.total_results : 0} )</h3>\n              </div>\n            </div>\n            <div \n              className={`filter-card ${data.movie && data.movie.total_results === 0 ? 'disabled' : ''} ${state.dataToShow === 'movie' ? 'selected' : ''}`}\n              onClick={() => this.handleDataChange('movie')}\n            >\n              <div className=\"name\">\n                <h3>Movies</h3>\n                <h3>( {data.movie ? data.movie.total_results : 0} )</h3>\n              </div>\n            </div>\n            <div \n              className={`filter-card ${data.tv && data.tv.total_results === 0 ? 'disabled' : ''} ${state.dataToShow === 'tv' ? 'selected' : ''}`}\n              onClick={() => this.handleDataChange('tv')}\n            >\n              <div className=\"name\">\n                <h3>Series</h3>\n                <h3>( {data.tv ? data.tv.total_results : 0} )</h3>\n              </div>\n            </div>\n          </section>\n          <section className=\"grid-start\">\n            {currentData.total_results === 0 && (\n              <p className=\"no-query\">Sorry, no items were found that match your query.</p>\n            )}\n            {isLoading ? (\n              <div className=\"loader\">\n                <SimpleLoader/>\n              </div>\n            ) : (\n              <>\n                <ul className=\"poster-list\">\n                  {currentData.results.map((item) => (\n                    <li className=\"poster-item\" key={item.id}>\n                      {state.dataToShow === 'person' ? (\n                        <ItemCast\n                          data={item}\n                          apiConfig={apiConfig}\n                        />\n                      ) : (\n                        <ItemThumb\n                          data={item}\n                          apiConfig={apiConfig}\n                          itemType={state.dataToShow === 'tv' ? ITEM_TYPE.TV : ITEM_TYPE.MOVIES}\n                        />\n                      )}\n                    </li>\n                  ))}\n                </ul>\n                {this.renderPaginate()}\n              </>\n            )}\n          </section>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.search,\n  apiConfig: state.apiConfig,\n  isLoading: state.userInterface.pendingRequests > 0\n});\n\nconst actionCreators = {\n  fetchSearchPerson, \n  fetchSearchMovies,\n  fetchSearchTv,\n  setSearchQueryUser,\n  clearStoreState\n}\n\nexport default connect(mapStateToProps, actionCreators)(Search);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchApiConfig } from '../actions/apiConfig';\n\nimport SplashScreen from '../components/layout/SplashScreen';\nimport Navbar from '../components/layout/Navbar';\nimport ScrollToTop from '../helpers/scroll';\nimport Home from './Home';\n\nimport MoviesDetails from './details/Movies';\nimport MoviesCast from './details/full-cast/MoviesCast';\nimport MoviesPopular from './grids/movies/Popular';\nimport MoviesUpcoming from './grids/movies/Upcoming';\nimport MoviesTopRated from './grids/movies/TopRated';\n\nimport TvDetails from './details/Tv';\nimport TvCast from './details/full-cast/TvCast';\nimport TvPopular from './grids/tv/Popular';\nimport TvTopRated from './grids/tv/TopRated';\n\nimport Person from './Person';\n\nimport Search from './Search';\n\nclass App extends Component {\n  static propTypes = {\n    fetchApiConfig: PropTypes.func.isRequired\n  }\n\n  componentDidMount() {\n    this.props.fetchApiConfig();\n  }\n\n  render() {\n    if (this.props.apiConfig.isInitializing) {\n      return <SplashScreen/>;\n    }\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <ScrollToTop/>\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/search\" component={Search}/>\n\n            <Route path=\"/movies/details/:id/full-cast\" component={MoviesCast}/>\n            <Route path=\"/movies/details/:id\" component={MoviesDetails}/>\n            <Route path=\"/movies/upcoming\" component={MoviesUpcoming}/>\n            <Route path=\"/movies/top-rated\" component={MoviesTopRated}/>\n            <Route path=\"/movies\" component={MoviesPopular}/>\n\n            <Route path=\"/tv/details/:id/full-cast\" component={TvCast}/>\n            <Route path=\"/tv/details/:id\" component={TvDetails}/>\n            <Route path=\"/tv/top-rated\" component={TvTopRated}/>\n            <Route path=\"/tv\" component={TvPopular}/>\n\n            <Route path=\"/person-details/:id\" component={Person}/>\n\n            <Route exact path=\"/\" component={Home}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  apiConfig: state.apiConfig\n});\n\nexport default connect(mapStateToProps, { fetchApiConfig })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}